<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAACw
        DgAAAk1TRnQBSQFMAgEBAwEAASQBAAEkAQABGQEAARkBAAT/AQkBAAj/AUIBTQE2AQQGAAE2AQQCAAEo
        AwABZAMAARkDAAEBAQABCAUAAcQBCRgAAYACAAGAAwACgAEAAYADAAGAAQABgAEAAoACAAPAAQABwAHc
        AcABAAHwAcoBpgEAATMFAAEzAQABMwEAATMBAAIzAgADFgEAAxwBAAMiAQADKQEAA1UBAANNAQADQgEA
        AzkBAAGAAXwB/wEAAlAB/wEAAZMBAAHWAQAB/wHsAcwBAAHGAdYB7wEAAdYC5wEAAZABqQGtAgAB/wEz
        AwABZgMAAZkDAAHMAgABMwMAAjMCAAEzAWYCAAEzAZkCAAEzAcwCAAEzAf8CAAFmAwABZgEzAgACZgIA
        AWYBmQIAAWYBzAIAAWYB/wIAAZkDAAGZATMCAAGZAWYCAAKZAgABmQHMAgABmQH/AgABzAMAAcwBMwIA
        AcwBZgIAAcwBmQIAAswCAAHMAf8CAAH/AWYCAAH/AZkCAAH/AcwBAAEzAf8CAAH/AQABMwEAATMBAAFm
        AQABMwEAAZkBAAEzAQABzAEAATMBAAH/AQAB/wEzAgADMwEAAjMBZgEAAjMBmQEAAjMBzAEAAjMB/wEA
        ATMBZgIAATMBZgEzAQABMwJmAQABMwFmAZkBAAEzAWYBzAEAATMBZgH/AQABMwGZAgABMwGZATMBAAEz
        AZkBZgEAATMCmQEAATMBmQHMAQABMwGZAf8BAAEzAcwCAAEzAcwBMwEAATMBzAFmAQABMwHMAZkBAAEz
        AswBAAEzAcwB/wEAATMB/wEzAQABMwH/AWYBAAEzAf8BmQEAATMB/wHMAQABMwL/AQABZgMAAWYBAAEz
        AQABZgEAAWYBAAFmAQABmQEAAWYBAAHMAQABZgEAAf8BAAFmATMCAAFmAjMBAAFmATMBZgEAAWYBMwGZ
        AQABZgEzAcwBAAFmATMB/wEAAmYCAAJmATMBAANmAQACZgGZAQACZgHMAQABZgGZAgABZgGZATMBAAFm
        AZkBZgEAAWYCmQEAAWYBmQHMAQABZgGZAf8BAAFmAcwCAAFmAcwBMwEAAWYBzAGZAQABZgLMAQABZgHM
        Af8BAAFmAf8CAAFmAf8BMwEAAWYB/wGZAQABZgH/AcwBAAHMAQAB/wEAAf8BAAHMAQACmQIAAZkBMwGZ
        AQABmQEAAZkBAAGZAQABzAEAAZkDAAGZAjMBAAGZAQABZgEAAZkBMwHMAQABmQEAAf8BAAGZAWYCAAGZ
        AWYBMwEAAZkBMwFmAQABmQFmAZkBAAGZAWYBzAEAAZkBMwH/AQACmQEzAQACmQFmAQADmQEAApkBzAEA
        ApkB/wEAAZkBzAIAAZkBzAEzAQABZgHMAWYBAAGZAcwBmQEAAZkCzAEAAZkBzAH/AQABmQH/AgABmQH/
        ATMBAAGZAcwBZgEAAZkB/wGZAQABmQH/AcwBAAGZAv8BAAHMAwABmQEAATMBAAHMAQABZgEAAcwBAAGZ
        AQABzAEAAcwBAAGZATMCAAHMAjMBAAHMATMBZgEAAcwBMwGZAQABzAEzAcwBAAHMATMB/wEAAcwBZgIA
        AcwBZgEzAQABmQJmAQABzAFmAZkBAAHMAWYBzAEAAZkBZgH/AQABzAGZAgABzAGZATMBAAHMAZkBZgEA
        AcwCmQEAAcwBmQHMAQABzAGZAf8BAALMAgACzAEzAQACzAFmAQACzAGZAQADzAEAAswB/wEAAcwB/wIA
        AcwB/wEzAQABmQH/AWYBAAHMAf8BmQEAAcwB/wHMAQABzAL/AQABzAEAATMBAAH/AQABZgEAAf8BAAGZ
        AQABzAEzAgAB/wIzAQAB/wEzAWYBAAH/ATMBmQEAAf8BMwHMAQAB/wEzAf8BAAH/AWYCAAH/AWYBMwEA
        AcwCZgEAAf8BZgGZAQAB/wFmAcwBAAHMAWYB/wEAAf8BmQIAAf8BmQEzAQAB/wGZAWYBAAH/ApkBAAH/
        AZkBzAEAAf8BmQH/AQAB/wHMAgAB/wHMATMBAAH/AcwBZgEAAf8BzAGZAQAB/wLMAQAB/wHMAf8BAAL/
        ATMBAAHMAf8BZgEAAv8BmQEAAv8BzAEAAmYB/wEAAWYB/wFmAQABZgL/AQAB/wJmAQAB/wFmAf8BAAL/
        AWYBAAEhAQABpQEAA18BAAN3AQADhgEAA5YBAAPLAQADsgEAA9cBAAPdAQAD4wEAA+oBAAPxAQAD+AEA
        AfAB+wH/AQABpAKgAQADgAMAAf8CAAH/AwAC/wEAAf8DAAH/AQAB/wEAAv8CAAP/AQAYxgGjFYYBqALG
        AaMYxgGjGQAY/QHGAeoBbQKuCOwJrgGCAaUB/QHGAf0BgAHLAaoBywHMEv0BxhkAGP0BxgHsAfcBBwHx
        AfMF9ALzAfIC8QLwArwBBwHvAewBZwGlAcYB/QGpAc8BiwG1AdcBzBH9AcYZAAH9AqoUggGlAcYB7QIH
        AbQBkQHsAe0B7wHwARwCcwHsAe0BBwGSBG4BbQHrAewBggGoAf0BywGpAc8BtAGvEv0BxhkAAf0BsAHt
        Aa4BbQRsDOoBbAFmAaUBxgHtAbwBBwGGA2YBrgGSAUsCKQEjAUoB7AFLBSMB6gHtAeoBhgL9AcsBtQG0
        Ac8BgAL9DqUB/QHGGQAB/QGwAbUE7wK1B/cBkgTtAa4BZgGlAcYB7QHwAQkBhgGLAa0BiwGGARMBSgEw
        AjEBAwEUAUQBJAElBCQBRAETAYYC/QHLAc8BtQG2AcwB/QGlAWENDAGlAcYZAAH9AbAB7wHxAfIC8QG8
        AQcEvAEHAe8BuwEJA7sBtQGuAWYBpQHGAe0B8AG8AYYDrQGLAWYBSgEwATgBNwExAQMBIwEkBCUBJAEj
        AWgBqAH9AcsBqQHPAbQBrwHMAv0Bgw0FAaUBxhkAAf0BsAEHBP8B8QEHAfMD9AHwAbUBCQEZAt0BCQG1
        Aa4BZgGlAcYB7QHwAbwBhgGtAdUBtAGtAYsBSgEwAjgBNwExASoBRQJGAiUBJAE+AaUBxgH9AakDzwGo
        AYAR/QHGGQAB/QGwAQcE/wHxAQcB8wP0AfEB7wEJAhkB3QEJAbUBrgFmAaUBxgHtAfABCQGGAa0C1QG0
        AYsBSgFRAjgBNwExASoBRQJMAUYBJQEkAT4BpQHGAf0BgAPLAYAS/QHGGQAB/QGwAe8E8wHwAQcB8ALx
        AfABvAHvAQcECQG1Aa4BZgGlAcYB7QHwAQkBiwHPAtUBtAHPAUoBUQJZATcBMQFLAUUDTAFGASQBPgGl
        AcYB/QHLAqoBqQGqEv0BxhkAAf0BsAHvBbwGBwPvArUC7wGuAWYBpQHGAe0B8AEJAYsBtAHWAdUCtAFK
        AVECWQFYAVIBSwFFA0wBRgFFAT4BpQHGAf0BqQGtAosBjAGAEf0BxhkAAf0BsAEHAfMD9AHxAbwB8gLz
        AfIB8AEHAbwB8QLwAQkB7wGuAWYBpQHGAe0BvAEJAYsBrQS0AesBUQJZAVgBUgJLAW8B4wJMAUUBPgGl
        AcYB/QHRAbUBrQG0AbUBzBH9AcYZAAH9AbABBwT/AfIBvAH0A/8B8gEHAfAC9AIZAbsBrgFmAaUBxgHt
        AbwBCQGtAc8BtAO1AXMBUgJ6AVgBUgJLAW8B4wFvAUwBRQE+AaUBxgH9AecB1wG0ArUBzAL9AaUMgwGl
        Af0BxhkAAf0BsAEHBP8B8gG8AfQD/wHzAQcB8QP0ARkBBwHsAWYBpQHGAe0BvAEJAa0BtQH0AhkBCQFz
        AXQCegF5AVgCSwF0ARYB4wFvAUUBPgGlAcYC/QHMAQkBtAGoAYAB/QGlAQwMAAEOAaUBxhkAAf0BsAEH
        BPIB8AG8BPEBvAEHBLwBBwHvAZEBZgGlAcYB7QG8Ad0CtQIJAdYBtQHsAXQBmgF6AnkBSwFuA3UBbwFF
        AT4BpQHGAf0BywGvArQBrwP9AaUNgwGlAcYZAAH9AbABBwTxAfABvAPwArwBBwS8AQcB7wGRAWYBpQHG
        Ae0BvAHxAd0BtQHPA68B6wF0A5oBeQJuAXQCdQFvAUUBPgGlAcYB/QHKAs8BrwHREv0BxhkAAf0BsAG8
        AfQD/wHyAbwB9AP/AfMBBwHxAvQB8wHyAQcBkQFmAaUBxgHtAQcB8gHxAe0BjAGqAf0BqgFuARwCoAGa
        AXkBcwJuAnQBbwFLAT4BpQHGGP0BxhkAAf0BsAG8BP8B8wHwAfQD/wH0AbwB8wP/AfMBBwGRAWYBpQHG
        Ae0BBwLxAewBjAGlAv0BbgEcAsMBmgGZAXMCbgGTAZoBlAFuAUQBpQHGAf0BqgSpEv0BxhkAAf0BsAEJ
        AfMD9AHxAQkB8wP0AfEBCQHdBBkBuwGRAWYBpQHGAe0BBwHwAfEB7AGMAaUC/QFuARwDGgGZA3MBkwEa
        AZoBbwFEAaUBxgH9Aa8BzwKLAYwBgBH9AcYZAAH9AdEGCQG1A9YB1QO0AdUEtAKtAcsBxgH3AQcBvAHw
        AewBjAGlAv0BbgFzAhwCmQJzAe8BkwJ0AW4BaAGlAcYB/QHXAbsBiwG0AbYBzBH9AcYZAAH9AdEB1gTc
        AtYK1QLUAq0BywHGAu8BBwG8AZEBjAGlAv0BbgFzApkCGgFzAW4CsASIAX8BxgH9AdEBtQGtAa8B0QP9
        AYMMBQGDAaUBxhkAAf0B0QncA9YH1QKtAcsBxgG8AbUB7wEHAa4BjAGlAv0BjQEcAfQBGwHDARoBHAFu
        B/0BxgH9AdABtAGtAakD/QGlAQwMDgEMAaUBxhkAAf0B0QHWAQkC3AXWCNUB1AGzAq0BywHGAcwBtgLv
        Aa4BjAGlAv0BtgQcAnMBbgf9AcYB/QHXAQkBzwGpBP0OpQH9AcYZAAH9AcsH0QrQBMoBgAHGAf0B0QG2
        AbUB7AGMAYAC/QKwBY4BiAf9AcYB/QHnAdcBrwHLE/0BxhkAGP0BxgL9AcwBvAH3AY0S/QHGGP0BxhkA
        AUIBTQE+BwABPgMAASgDAAFkAwABGQMAAQEBAAEBBQABkAEBFgAD//8AkgAL
</value>
  </data>
</root>