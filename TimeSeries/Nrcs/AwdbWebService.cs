// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.17020
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

// 
// This source code was auto-generated by Web Services Description Language Utility
//Mono Framework v4.0.30319.17020
//

namespace Reclamation.TimeSeries.Nrcs
{


    /// <remarks/>
    [System.Web.Services.WebServiceBinding(Name = "AwdbWebServiceImplPort", Namespace = "http://www.wcc.nrcs.usda.gov/ns/awdbWebService")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AwdbWebService : System.Web.Services.Protocols.SoapHttpClientProtocol
    {

        private System.Threading.SendOrPostCallback getForecastsOperationCompleted;

        private System.Threading.SendOrPostCallback getForecastsByPubDateOperationCompleted;

        private System.Threading.SendOrPostCallback getStationsOperationCompleted;

        private System.Threading.SendOrPostCallback getAveragesDataOperationCompleted;

        private System.Threading.SendOrPostCallback getHourlyDataOperationCompleted;

        private System.Threading.SendOrPostCallback runDiagnosticsOperationCompleted;

        private System.Threading.SendOrPostCallback getForecastEquationsOperationCompleted;

        private System.Threading.SendOrPostCallback getUnitNameOperationCompleted;

        private System.Threading.SendOrPostCallback getStationMetadataMultipleOperationCompleted;

        private System.Threading.SendOrPostCallback getForecastPointOperationCompleted;

        private System.Threading.SendOrPostCallback getStationDataAssuredFlagsOperationCompleted;

        private System.Threading.SendOrPostCallback getForecastEquationsMultipleOperationCompleted;

        private System.Threading.SendOrPostCallback getForecastPeriodCentralTendencyOperationCompleted;

        private System.Threading.SendOrPostCallback getElementOperationCompleted;

        private System.Threading.SendOrPostCallback getForecastValueOperationCompleted;

        private System.Threading.SendOrPostCallback getForecastConfigurationsOperationCompleted;

        private System.Threading.SendOrPostCallback getCentralTendencyPeakDataOperationCompleted;

        private System.Threading.SendOrPostCallback getReservoirMetadataMultipleOperationCompleted;

        private System.Threading.SendOrPostCallback getForecastOperationCompleted;

        private System.Threading.SendOrPostCallback getReservoirMetadataOperationCompleted;

        private System.Threading.SendOrPostCallback getAllForecastsForStationOperationCompleted;

        private System.Threading.SendOrPostCallback getForecastPeriodAveragesOperationCompleted;

        private System.Threading.SendOrPostCallback getStationElementsOperationCompleted;

        private System.Threading.SendOrPostCallback getInstantaneousDataOperationCompleted;

        private System.Threading.SendOrPostCallback getDataOperationCompleted;

        private System.Threading.SendOrPostCallback getCentralTendencyDataOperationCompleted;

        private System.Threading.SendOrPostCallback getForecastPeriodsOperationCompleted;

        private System.Threading.SendOrPostCallback getHeightDepthsOperationCompleted;

        private System.Threading.SendOrPostCallback getForecastPointsOperationCompleted;

        private System.Threading.SendOrPostCallback getStationMetadataOperationCompleted;

        private System.Threading.SendOrPostCallback areYouThereOperationCompleted;

        private System.Threading.SendOrPostCallback getAveragesPeakOperationCompleted;

        private System.Threading.SendOrPostCallback getPeakDataOperationCompleted;

        private System.Threading.SendOrPostCallback getUnitsOperationCompleted;

        private System.Threading.SendOrPostCallback getElementsOperationCompleted;

        public AwdbWebService()
        {
            this.Url = "http://www.wcc.nrcs.usda.gov/awdbWebService/services";
        }

        public event getForecastsCompletedEventHandler getForecastsCompleted;

        public event getForecastsByPubDateCompletedEventHandler getForecastsByPubDateCompleted;

        public event getStationsCompletedEventHandler getStationsCompleted;

        public event getAveragesDataCompletedEventHandler getAveragesDataCompleted;

        public event getHourlyDataCompletedEventHandler getHourlyDataCompleted;

        public event runDiagnosticsCompletedEventHandler runDiagnosticsCompleted;

        public event getForecastEquationsCompletedEventHandler getForecastEquationsCompleted;

        public event getUnitNameCompletedEventHandler getUnitNameCompleted;

        public event getStationMetadataMultipleCompletedEventHandler getStationMetadataMultipleCompleted;

        public event getForecastPointCompletedEventHandler getForecastPointCompleted;

        public event getStationDataAssuredFlagsCompletedEventHandler getStationDataAssuredFlagsCompleted;

        public event getForecastEquationsMultipleCompletedEventHandler getForecastEquationsMultipleCompleted;

        public event getForecastPeriodCentralTendencyCompletedEventHandler getForecastPeriodCentralTendencyCompleted;

        public event getElementCompletedEventHandler getElementCompleted;

        public event getForecastValueCompletedEventHandler getForecastValueCompleted;

        public event getForecastConfigurationsCompletedEventHandler getForecastConfigurationsCompleted;

        public event getCentralTendencyPeakDataCompletedEventHandler getCentralTendencyPeakDataCompleted;

        public event getReservoirMetadataMultipleCompletedEventHandler getReservoirMetadataMultipleCompleted;

        public event getForecastCompletedEventHandler getForecastCompleted;

        public event getReservoirMetadataCompletedEventHandler getReservoirMetadataCompleted;

        public event getAllForecastsForStationCompletedEventHandler getAllForecastsForStationCompleted;

        public event getForecastPeriodAveragesCompletedEventHandler getForecastPeriodAveragesCompleted;

        public event getStationElementsCompletedEventHandler getStationElementsCompleted;

        public event getInstantaneousDataCompletedEventHandler getInstantaneousDataCompleted;

        public event getDataCompletedEventHandler getDataCompleted;

        public event getCentralTendencyDataCompletedEventHandler getCentralTendencyDataCompleted;

        public event getForecastPeriodsCompletedEventHandler getForecastPeriodsCompleted;

        public event getHeightDepthsCompletedEventHandler getHeightDepthsCompleted;

        public event getForecastPointsCompletedEventHandler getForecastPointsCompleted;

        public event getStationMetadataCompletedEventHandler getStationMetadataCompleted;

        public event areYouThereCompletedEventHandler areYouThereCompleted;

        public event getAveragesPeakCompletedEventHandler getAveragesPeakCompleted;

        public event getPeakDataCompletedEventHandler getPeakDataCompleted;

        public event getUnitsCompletedEventHandler getUnitsCompleted;

        public event getElementsCompletedEventHandler getElementsCompleted;

        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.wcc.nrcs.usda.gov/ns/awdbWebService", ResponseNamespace = "http://www.wcc.nrcs.usda.gov/ns/awdbWebService", ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use = System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public forecast[] getForecasts([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string stationTriplet, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string elementCd, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string forecastPeriod)
        {
            object[] results = this.Invoke("getForecasts", new object[] {
                    stationTriplet,
                    elementCd,
                    forecastPeriod});
            return ((forecast[])(results[0]));
        }

        public System.IAsyncResult BegingetForecasts(string stationTriplet, string elementCd, string forecastPeriod, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("getForecasts", new object[] {
                    stationTriplet,
                    elementCd,
                    forecastPeriod}, callback, asyncState);
        }

        public forecast[] EndgetForecasts(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((forecast[])(results[0]));
        }

        public void getForecastsAsync(string stationTriplet, string elementCd, string forecastPeriod)
        {
            this.getForecastsAsync(stationTriplet, elementCd, forecastPeriod, null);
        }

        public void getForecastsAsync(string stationTriplet, string elementCd, string forecastPeriod, object userState)
        {
            if ((this.getForecastsOperationCompleted == null))
            {
                this.getForecastsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetForecastsCompleted);
            }
            this.InvokeAsync("getForecasts", new object[] {
                    stationTriplet,
                    elementCd,
                    forecastPeriod}, this.getForecastsOperationCompleted, userState);
        }

        private void OngetForecastsCompleted(object arg)
        {
            if ((this.getForecastsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getForecastsCompleted(this, new getForecastsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.wcc.nrcs.usda.gov/ns/awdbWebService", ResponseNamespace = "http://www.wcc.nrcs.usda.gov/ns/awdbWebService", ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use = System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public forecast[] getForecastsByPubDate([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string stationTriplet, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string elementCd, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string forecastPeriod, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string beginPublicationDate, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string endPublicationDate)
        {
            object[] results = this.Invoke("getForecastsByPubDate", new object[] {
                    stationTriplet,
                    elementCd,
                    forecastPeriod,
                    beginPublicationDate,
                    endPublicationDate});
            return ((forecast[])(results[0]));
        }

        public System.IAsyncResult BegingetForecastsByPubDate(string stationTriplet, string elementCd, string forecastPeriod, string beginPublicationDate, string endPublicationDate, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("getForecastsByPubDate", new object[] {
                    stationTriplet,
                    elementCd,
                    forecastPeriod,
                    beginPublicationDate,
                    endPublicationDate}, callback, asyncState);
        }

        public forecast[] EndgetForecastsByPubDate(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((forecast[])(results[0]));
        }

        public void getForecastsByPubDateAsync(string stationTriplet, string elementCd, string forecastPeriod, string beginPublicationDate, string endPublicationDate)
        {
            this.getForecastsByPubDateAsync(stationTriplet, elementCd, forecastPeriod, beginPublicationDate, endPublicationDate, null);
        }

        public void getForecastsByPubDateAsync(string stationTriplet, string elementCd, string forecastPeriod, string beginPublicationDate, string endPublicationDate, object userState)
        {
            if ((this.getForecastsByPubDateOperationCompleted == null))
            {
                this.getForecastsByPubDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetForecastsByPubDateCompleted);
            }
            this.InvokeAsync("getForecastsByPubDate", new object[] {
                    stationTriplet,
                    elementCd,
                    forecastPeriod,
                    beginPublicationDate,
                    endPublicationDate}, this.getForecastsByPubDateOperationCompleted, userState);
        }

        private void OngetForecastsByPubDateCompleted(object arg)
        {
            if ((this.getForecastsByPubDateCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getForecastsByPubDateCompleted(this, new getForecastsByPubDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.wcc.nrcs.usda.gov/ns/awdbWebService", ResponseNamespace = "http://www.wcc.nrcs.usda.gov/ns/awdbWebService", ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use = System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string[] getStations([System.Xml.Serialization.XmlElementAttribute("stationIds", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] stationIds, [System.Xml.Serialization.XmlElementAttribute("stateCds", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] stateCds, [System.Xml.Serialization.XmlElementAttribute("networkCds", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] networkCds, [System.Xml.Serialization.XmlElementAttribute("hucs", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] hucs, [System.Xml.Serialization.XmlElementAttribute("countyNames", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] countyNames, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] decimal minLatitude, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] decimal maxLatitude, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] decimal minLongitude, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] decimal maxLongitude, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] decimal minElevation, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] decimal maxElevation, [System.Xml.Serialization.XmlElementAttribute("elementCds", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] elementCds, [System.Xml.Serialization.XmlElementAttribute("ordinals", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] int[] ordinals, [System.Xml.Serialization.XmlElementAttribute("heightDepths", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] heightDepth[] heightDepths, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] bool logicalAnd)
        {
            object[] results = this.Invoke("getStations", new object[] {
                    stationIds,
                    stateCds,
                    networkCds,
                    hucs,
                    countyNames,
                    minLatitude,
                    maxLatitude,
                    minLongitude,
                    maxLongitude,
                    minElevation,
                    maxElevation,
                    elementCds,
                    ordinals,
                    heightDepths,
                    logicalAnd});
            return ((string[])(results[0]));
        }

        public System.IAsyncResult BegingetStations(string[] stationIds, string[] stateCds, string[] networkCds, string[] hucs, string[] countyNames, decimal minLatitude, decimal maxLatitude, decimal minLongitude, decimal maxLongitude, decimal minElevation, decimal maxElevation, string[] elementCds, int[] ordinals, heightDepth[] heightDepths, bool logicalAnd, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("getStations", new object[] {
                    stationIds,
                    stateCds,
                    networkCds,
                    hucs,
                    countyNames,
                    minLatitude,
                    maxLatitude,
                    minLongitude,
                    maxLongitude,
                    minElevation,
                    maxElevation,
                    elementCds,
                    ordinals,
                    heightDepths,
                    logicalAnd}, callback, asyncState);
        }

        public string[] EndgetStations(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }

        public void getStationsAsync(string[] stationIds, string[] stateCds, string[] networkCds, string[] hucs, string[] countyNames, decimal minLatitude, decimal maxLatitude, decimal minLongitude, decimal maxLongitude, decimal minElevation, decimal maxElevation, string[] elementCds, int[] ordinals, heightDepth[] heightDepths, bool logicalAnd)
        {
            this.getStationsAsync(stationIds, stateCds, networkCds, hucs, countyNames, minLatitude, maxLatitude, minLongitude, maxLongitude, minElevation, maxElevation, elementCds, ordinals, heightDepths, logicalAnd, null);
        }

        public void getStationsAsync(string[] stationIds, string[] stateCds, string[] networkCds, string[] hucs, string[] countyNames, decimal minLatitude, decimal maxLatitude, decimal minLongitude, decimal maxLongitude, decimal minElevation, decimal maxElevation, string[] elementCds, int[] ordinals, heightDepth[] heightDepths, bool logicalAnd, object userState)
        {
            if ((this.getStationsOperationCompleted == null))
            {
                this.getStationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetStationsCompleted);
            }
            this.InvokeAsync("getStations", new object[] {
                    stationIds,
                    stateCds,
                    networkCds,
                    hucs,
                    countyNames,
                    minLatitude,
                    maxLatitude,
                    minLongitude,
                    maxLongitude,
                    minElevation,
                    maxElevation,
                    elementCds,
                    ordinals,
                    heightDepths,
                    logicalAnd}, this.getStationsOperationCompleted, userState);
        }

        private void OngetStationsCompleted(object arg)
        {
            if ((this.getStationsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getStationsCompleted(this, new getStationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.wcc.nrcs.usda.gov/ns/awdbWebService", ResponseNamespace = "http://www.wcc.nrcs.usda.gov/ns/awdbWebService", ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use = System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public averagesData[] getAveragesData([System.Xml.Serialization.XmlElementAttribute("stationTriplets", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] stationTriplets, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string elementCd, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] heightDepth heightDepth, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] duration duration, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] bool getFlags, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] int beginMonth, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] int beginDay, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] int endMonth, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] int endDay)
        {
            object[] results = this.Invoke("getAveragesData", new object[] {
                    stationTriplets,
                    elementCd,
                    heightDepth,
                    duration,
                    getFlags,
                    beginMonth,
                    beginDay,
                    endMonth,
                    endDay});
            return ((averagesData[])(results[0]));
        }

        public System.IAsyncResult BegingetAveragesData(string[] stationTriplets, string elementCd, heightDepth heightDepth, duration duration, bool getFlags, int beginMonth, int beginDay, int endMonth, int endDay, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("getAveragesData", new object[] {
                    stationTriplets,
                    elementCd,
                    heightDepth,
                    duration,
                    getFlags,
                    beginMonth,
                    beginDay,
                    endMonth,
                    endDay}, callback, asyncState);
        }

        public averagesData[] EndgetAveragesData(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((averagesData[])(results[0]));
        }

        public void getAveragesDataAsync(string[] stationTriplets, string elementCd, heightDepth heightDepth, duration duration, bool getFlags, int beginMonth, int beginDay, int endMonth, int endDay)
        {
            this.getAveragesDataAsync(stationTriplets, elementCd, heightDepth, duration, getFlags, beginMonth, beginDay, endMonth, endDay, null);
        }

        public void getAveragesDataAsync(string[] stationTriplets, string elementCd, heightDepth heightDepth, duration duration, bool getFlags, int beginMonth, int beginDay, int endMonth, int endDay, object userState)
        {
            if ((this.getAveragesDataOperationCompleted == null))
            {
                this.getAveragesDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAveragesDataCompleted);
            }
            this.InvokeAsync("getAveragesData", new object[] {
                    stationTriplets,
                    elementCd,
                    heightDepth,
                    duration,
                    getFlags,
                    beginMonth,
                    beginDay,
                    endMonth,
                    endDay}, this.getAveragesDataOperationCompleted, userState);
        }

        private void OngetAveragesDataCompleted(object arg)
        {
            if ((this.getAveragesDataCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAveragesDataCompleted(this, new getAveragesDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.wcc.nrcs.usda.gov/ns/awdbWebService", ResponseNamespace = "http://www.wcc.nrcs.usda.gov/ns/awdbWebService", ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use = System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public hourlyData[] getHourlyData([System.Xml.Serialization.XmlElementAttribute("stationTriplets", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] stationTriplets, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string elementCd, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] int ordinal, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] heightDepth heightDepth, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string beginDate, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string endDate, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] int beginHour, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] int endHour)
        {
            object[] results = this.Invoke("getHourlyData", new object[] {
                    stationTriplets,
                    elementCd,
                    ordinal,
                    heightDepth,
                    beginDate,
                    endDate,
                    beginHour,
                    endHour});
            return ((hourlyData[])(results[0]));
        }

        public System.IAsyncResult BegingetHourlyData(string[] stationTriplets, string elementCd, int ordinal, heightDepth heightDepth, string beginDate, string endDate, int beginHour, int endHour, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("getHourlyData", new object[] {
                    stationTriplets,
                    elementCd,
                    ordinal,
                    heightDepth,
                    beginDate,
                    endDate,
                    beginHour,
                    endHour}, callback, asyncState);
        }

        public hourlyData[] EndgetHourlyData(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((hourlyData[])(results[0]));
        }

        public void getHourlyDataAsync(string[] stationTriplets, string elementCd, int ordinal, heightDepth heightDepth, string beginDate, string endDate, int beginHour, int endHour)
        {
            this.getHourlyDataAsync(stationTriplets, elementCd, ordinal, heightDepth, beginDate, endDate, beginHour, endHour, null);
        }

        public void getHourlyDataAsync(string[] stationTriplets, string elementCd, int ordinal, heightDepth heightDepth, string beginDate, string endDate, int beginHour, int endHour, object userState)
        {
            if ((this.getHourlyDataOperationCompleted == null))
            {
                this.getHourlyDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetHourlyDataCompleted);
            }
            this.InvokeAsync("getHourlyData", new object[] {
                    stationTriplets,
                    elementCd,
                    ordinal,
                    heightDepth,
                    beginDate,
                    endDate,
                    beginHour,
                    endHour}, this.getHourlyDataOperationCompleted, userState);
        }

        private void OngetHourlyDataCompleted(object arg)
        {
            if ((this.getHourlyDataCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getHourlyDataCompleted(this, new getHourlyDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.wcc.nrcs.usda.gov/ns/awdbWebService", ResponseNamespace = "http://www.wcc.nrcs.usda.gov/ns/awdbWebService", ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use = System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public diagnostics runDiagnostics()
        {
            object[] results = this.Invoke("runDiagnostics", new object[0]);
            return ((diagnostics)(results[0]));
        }

        public System.IAsyncResult BeginrunDiagnostics(System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("runDiagnostics", new object[0], callback, asyncState);
        }

        public diagnostics EndrunDiagnostics(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((diagnostics)(results[0]));
        }

        public void runDiagnosticsAsync()
        {
            this.runDiagnosticsAsync(null);
        }

        public void runDiagnosticsAsync(object userState)
        {
            if ((this.runDiagnosticsOperationCompleted == null))
            {
                this.runDiagnosticsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrunDiagnosticsCompleted);
            }
            this.InvokeAsync("runDiagnostics", new object[0], this.runDiagnosticsOperationCompleted, userState);
        }

        private void OnrunDiagnosticsCompleted(object arg)
        {
            if ((this.runDiagnosticsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.runDiagnosticsCompleted(this, new runDiagnosticsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.wcc.nrcs.usda.gov/ns/awdbWebService", ResponseNamespace = "http://www.wcc.nrcs.usda.gov/ns/awdbWebService", ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use = System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public forecastEquation[] getForecastEquations([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string stationTriplet)
        {
            object[] results = this.Invoke("getForecastEquations", new object[] {
                    stationTriplet});
            return ((forecastEquation[])(results[0]));
        }

        public System.IAsyncResult BegingetForecastEquations(string stationTriplet, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("getForecastEquations", new object[] {
                    stationTriplet}, callback, asyncState);
        }

        public forecastEquation[] EndgetForecastEquations(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((forecastEquation[])(results[0]));
        }

        public void getForecastEquationsAsync(string stationTriplet)
        {
            this.getForecastEquationsAsync(stationTriplet, null);
        }

        public void getForecastEquationsAsync(string stationTriplet, object userState)
        {
            if ((this.getForecastEquationsOperationCompleted == null))
            {
                this.getForecastEquationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetForecastEquationsCompleted);
            }
            this.InvokeAsync("getForecastEquations", new object[] {
                    stationTriplet}, this.getForecastEquationsOperationCompleted, userState);
        }

        private void OngetForecastEquationsCompleted(object arg)
        {
            if ((this.getForecastEquationsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getForecastEquationsCompleted(this, new getForecastEquationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.wcc.nrcs.usda.gov/ns/awdbWebService", ResponseNamespace = "http://www.wcc.nrcs.usda.gov/ns/awdbWebService", ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use = System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getUnitName([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string unitCd)
        {
            object[] results = this.Invoke("getUnitName", new object[] {
                    unitCd});
            return ((string)(results[0]));
        }

        public System.IAsyncResult BegingetUnitName(string unitCd, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("getUnitName", new object[] {
                    unitCd}, callback, asyncState);
        }

        public string EndgetUnitName(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        public void getUnitNameAsync(string unitCd)
        {
            this.getUnitNameAsync(unitCd, null);
        }

        public void getUnitNameAsync(string unitCd, object userState)
        {
            if ((this.getUnitNameOperationCompleted == null))
            {
                this.getUnitNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUnitNameCompleted);
            }
            this.InvokeAsync("getUnitName", new object[] {
                    unitCd}, this.getUnitNameOperationCompleted, userState);
        }

        private void OngetUnitNameCompleted(object arg)
        {
            if ((this.getUnitNameCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUnitNameCompleted(this, new getUnitNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.wcc.nrcs.usda.gov/ns/awdbWebService", ResponseNamespace = "http://www.wcc.nrcs.usda.gov/ns/awdbWebService", ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use = System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public stationMetaData[] getStationMetadataMultiple([System.Xml.Serialization.XmlElementAttribute("stationTriplets", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] stationTriplets)
        {
            object[] results = this.Invoke("getStationMetadataMultiple", new object[] {
                    stationTriplets});
            return ((stationMetaData[])(results[0]));
        }

        public System.IAsyncResult BegingetStationMetadataMultiple(string[] stationTriplets, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("getStationMetadataMultiple", new object[] {
                    stationTriplets}, callback, asyncState);
        }

        public stationMetaData[] EndgetStationMetadataMultiple(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((stationMetaData[])(results[0]));
        }

        public void getStationMetadataMultipleAsync(string[] stationTriplets)
        {
            this.getStationMetadataMultipleAsync(stationTriplets, null);
        }

        public void getStationMetadataMultipleAsync(string[] stationTriplets, object userState)
        {
            if ((this.getStationMetadataMultipleOperationCompleted == null))
            {
                this.getStationMetadataMultipleOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetStationMetadataMultipleCompleted);
            }
            this.InvokeAsync("getStationMetadataMultiple", new object[] {
                    stationTriplets}, this.getStationMetadataMultipleOperationCompleted, userState);
        }

        private void OngetStationMetadataMultipleCompleted(object arg)
        {
            if ((this.getStationMetadataMultipleCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getStationMetadataMultipleCompleted(this, new getStationMetadataMultipleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.wcc.nrcs.usda.gov/ns/awdbWebService", ResponseNamespace = "http://www.wcc.nrcs.usda.gov/ns/awdbWebService", ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use = System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public forecastPoint getForecastPoint([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string stationTriplet)
        {
            object[] results = this.Invoke("getForecastPoint", new object[] {
                    stationTriplet});
            return ((forecastPoint)(results[0]));
        }

        public System.IAsyncResult BegingetForecastPoint(string stationTriplet, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("getForecastPoint", new object[] {
                    stationTriplet}, callback, asyncState);
        }

        public forecastPoint EndgetForecastPoint(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((forecastPoint)(results[0]));
        }

        public void getForecastPointAsync(string stationTriplet)
        {
            this.getForecastPointAsync(stationTriplet, null);
        }

        public void getForecastPointAsync(string stationTriplet, object userState)
        {
            if ((this.getForecastPointOperationCompleted == null))
            {
                this.getForecastPointOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetForecastPointCompleted);
            }
            this.InvokeAsync("getForecastPoint", new object[] {
                    stationTriplet}, this.getForecastPointOperationCompleted, userState);
        }

        private void OngetForecastPointCompleted(object arg)
        {
            if ((this.getForecastPointCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getForecastPointCompleted(this, new getForecastPointCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.wcc.nrcs.usda.gov/ns/awdbWebService", ResponseNamespace = "http://www.wcc.nrcs.usda.gov/ns/awdbWebService", ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use = System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public stationDataAssuredFlags[] getStationDataAssuredFlags([System.Xml.Serialization.XmlElementAttribute("stationTriplets", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] stationTriplets, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string elementCd, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] int ordinal, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] heightDepth heightDepth, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string durationCd, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] int beginWaterYear, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] int endWaterYear)
        {
            object[] results = this.Invoke("getStationDataAssuredFlags", new object[] {
                    stationTriplets,
                    elementCd,
                    ordinal,
                    heightDepth,
                    durationCd,
                    beginWaterYear,
                    endWaterYear});
            return ((stationDataAssuredFlags[])(results[0]));
        }

        public System.IAsyncResult BegingetStationDataAssuredFlags(string[] stationTriplets, string elementCd, int ordinal, heightDepth heightDepth, string durationCd, int beginWaterYear, int endWaterYear, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("getStationDataAssuredFlags", new object[] {
                    stationTriplets,
                    elementCd,
                    ordinal,
                    heightDepth,
                    durationCd,
                    beginWaterYear,
                    endWaterYear}, callback, asyncState);
        }

        public stationDataAssuredFlags[] EndgetStationDataAssuredFlags(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((stationDataAssuredFlags[])(results[0]));
        }

        public void getStationDataAssuredFlagsAsync(string[] stationTriplets, string elementCd, int ordinal, heightDepth heightDepth, string durationCd, int beginWaterYear, int endWaterYear)
        {
            this.getStationDataAssuredFlagsAsync(stationTriplets, elementCd, ordinal, heightDepth, durationCd, beginWaterYear, endWaterYear, null);
        }

        public void getStationDataAssuredFlagsAsync(string[] stationTriplets, string elementCd, int ordinal, heightDepth heightDepth, string durationCd, int beginWaterYear, int endWaterYear, object userState)
        {
            if ((this.getStationDataAssuredFlagsOperationCompleted == null))
            {
                this.getStationDataAssuredFlagsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetStationDataAssuredFlagsCompleted);
            }
            this.InvokeAsync("getStationDataAssuredFlags", new object[] {
                    stationTriplets,
                    elementCd,
                    ordinal,
                    heightDepth,
                    durationCd,
                    beginWaterYear,
                    endWaterYear}, this.getStationDataAssuredFlagsOperationCompleted, userState);
        }

        private void OngetStationDataAssuredFlagsCompleted(object arg)
        {
            if ((this.getStationDataAssuredFlagsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getStationDataAssuredFlagsCompleted(this, new getStationDataAssuredFlagsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.wcc.nrcs.usda.gov/ns/awdbWebService", ResponseNamespace = "http://www.wcc.nrcs.usda.gov/ns/awdbWebService", ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use = System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public forecastEquation[] getForecastEquationsMultiple([System.Xml.Serialization.XmlElementAttribute("stationTriplets", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] stationTriplets)
        {
            object[] results = this.Invoke("getForecastEquationsMultiple", new object[] {
                    stationTriplets});
            return ((forecastEquation[])(results[0]));
        }

        public System.IAsyncResult BegingetForecastEquationsMultiple(string[] stationTriplets, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("getForecastEquationsMultiple", new object[] {
                    stationTriplets}, callback, asyncState);
        }

        public forecastEquation[] EndgetForecastEquationsMultiple(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((forecastEquation[])(results[0]));
        }

        public void getForecastEquationsMultipleAsync(string[] stationTriplets)
        {
            this.getForecastEquationsMultipleAsync(stationTriplets, null);
        }

        public void getForecastEquationsMultipleAsync(string[] stationTriplets, object userState)
        {
            if ((this.getForecastEquationsMultipleOperationCompleted == null))
            {
                this.getForecastEquationsMultipleOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetForecastEquationsMultipleCompleted);
            }
            this.InvokeAsync("getForecastEquationsMultiple", new object[] {
                    stationTriplets}, this.getForecastEquationsMultipleOperationCompleted, userState);
        }

        private void OngetForecastEquationsMultipleCompleted(object arg)
        {
            if ((this.getForecastEquationsMultipleCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getForecastEquationsMultipleCompleted(this, new getForecastEquationsMultipleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.wcc.nrcs.usda.gov/ns/awdbWebService", ResponseNamespace = "http://www.wcc.nrcs.usda.gov/ns/awdbWebService", ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use = System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public forecastPeriodCentralTendency[] getForecastPeriodCentralTendency([System.Xml.Serialization.XmlElementAttribute("stationTriplets", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] stationTriplets, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string elementCd, [System.Xml.Serialization.XmlElementAttribute("periods", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] periods, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] centralTendencyType centralTendencyType)
        {
            object[] results = this.Invoke("getForecastPeriodCentralTendency", new object[] {
                    stationTriplets,
                    elementCd,
                    periods,
                    centralTendencyType});
            return ((forecastPeriodCentralTendency[])(results[0]));
        }

        public System.IAsyncResult BegingetForecastPeriodCentralTendency(string[] stationTriplets, string elementCd, string[] periods, centralTendencyType centralTendencyType, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("getForecastPeriodCentralTendency", new object[] {
                    stationTriplets,
                    elementCd,
                    periods,
                    centralTendencyType}, callback, asyncState);
        }

        public forecastPeriodCentralTendency[] EndgetForecastPeriodCentralTendency(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((forecastPeriodCentralTendency[])(results[0]));
        }

        public void getForecastPeriodCentralTendencyAsync(string[] stationTriplets, string elementCd, string[] periods, centralTendencyType centralTendencyType)
        {
            this.getForecastPeriodCentralTendencyAsync(stationTriplets, elementCd, periods, centralTendencyType, null);
        }

        public void getForecastPeriodCentralTendencyAsync(string[] stationTriplets, string elementCd, string[] periods, centralTendencyType centralTendencyType, object userState)
        {
            if ((this.getForecastPeriodCentralTendencyOperationCompleted == null))
            {
                this.getForecastPeriodCentralTendencyOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetForecastPeriodCentralTendencyCompleted);
            }
            this.InvokeAsync("getForecastPeriodCentralTendency", new object[] {
                    stationTriplets,
                    elementCd,
                    periods,
                    centralTendencyType}, this.getForecastPeriodCentralTendencyOperationCompleted, userState);
        }

        private void OngetForecastPeriodCentralTendencyCompleted(object arg)
        {
            if ((this.getForecastPeriodCentralTendencyCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getForecastPeriodCentralTendencyCompleted(this, new getForecastPeriodCentralTendencyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.wcc.nrcs.usda.gov/ns/awdbWebService", ResponseNamespace = "http://www.wcc.nrcs.usda.gov/ns/awdbWebService", ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use = System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public element getElement([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string elementCd)
        {
            object[] results = this.Invoke("getElement", new object[] {
                    elementCd});
            return ((element)(results[0]));
        }

        public System.IAsyncResult BegingetElement(string elementCd, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("getElement", new object[] {
                    elementCd}, callback, asyncState);
        }

        public element EndgetElement(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((element)(results[0]));
        }

        public void getElementAsync(string elementCd)
        {
            this.getElementAsync(elementCd, null);
        }

        public void getElementAsync(string elementCd, object userState)
        {
            if ((this.getElementOperationCompleted == null))
            {
                this.getElementOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetElementCompleted);
            }
            this.InvokeAsync("getElement", new object[] {
                    elementCd}, this.getElementOperationCompleted, userState);
        }

        private void OngetElementCompleted(object arg)
        {
            if ((this.getElementCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getElementCompleted(this, new getElementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.wcc.nrcs.usda.gov/ns/awdbWebService", ResponseNamespace = "http://www.wcc.nrcs.usda.gov/ns/awdbWebService", ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use = System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public decimal getForecastValue([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string stationTriplet, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string elementCd, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string forecastPeriod, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] int probability, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] int publicationYear, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] int publicationMonth, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] int publicationDay)
        {
            object[] results = this.Invoke("getForecastValue", new object[] {
                    stationTriplet,
                    elementCd,
                    forecastPeriod,
                    probability,
                    publicationYear,
                    publicationMonth,
                    publicationDay});
            return ((decimal)(results[0]));
        }

        public System.IAsyncResult BegingetForecastValue(string stationTriplet, string elementCd, string forecastPeriod, int probability, int publicationYear, int publicationMonth, int publicationDay, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("getForecastValue", new object[] {
                    stationTriplet,
                    elementCd,
                    forecastPeriod,
                    probability,
                    publicationYear,
                    publicationMonth,
                    publicationDay}, callback, asyncState);
        }

        public decimal EndgetForecastValue(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((decimal)(results[0]));
        }

        public void getForecastValueAsync(string stationTriplet, string elementCd, string forecastPeriod, int probability, int publicationYear, int publicationMonth, int publicationDay)
        {
            this.getForecastValueAsync(stationTriplet, elementCd, forecastPeriod, probability, publicationYear, publicationMonth, publicationDay, null);
        }

        public void getForecastValueAsync(string stationTriplet, string elementCd, string forecastPeriod, int probability, int publicationYear, int publicationMonth, int publicationDay, object userState)
        {
            if ((this.getForecastValueOperationCompleted == null))
            {
                this.getForecastValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetForecastValueCompleted);
            }
            this.InvokeAsync("getForecastValue", new object[] {
                    stationTriplet,
                    elementCd,
                    forecastPeriod,
                    probability,
                    publicationYear,
                    publicationMonth,
                    publicationDay}, this.getForecastValueOperationCompleted, userState);
        }

        private void OngetForecastValueCompleted(object arg)
        {
            if ((this.getForecastValueCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getForecastValueCompleted(this, new getForecastValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.wcc.nrcs.usda.gov/ns/awdbWebService", ResponseNamespace = "http://www.wcc.nrcs.usda.gov/ns/awdbWebService", ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use = System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public configuration[] getForecastConfigurations([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string forecaster)
        {
            object[] results = this.Invoke("getForecastConfigurations", new object[] {
                    forecaster});
            return ((configuration[])(results[0]));
        }

        public System.IAsyncResult BegingetForecastConfigurations(string forecaster, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("getForecastConfigurations", new object[] {
                    forecaster}, callback, asyncState);
        }

        public configuration[] EndgetForecastConfigurations(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((configuration[])(results[0]));
        }

        public void getForecastConfigurationsAsync(string forecaster)
        {
            this.getForecastConfigurationsAsync(forecaster, null);
        }

        public void getForecastConfigurationsAsync(string forecaster, object userState)
        {
            if ((this.getForecastConfigurationsOperationCompleted == null))
            {
                this.getForecastConfigurationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetForecastConfigurationsCompleted);
            }
            this.InvokeAsync("getForecastConfigurations", new object[] {
                    forecaster}, this.getForecastConfigurationsOperationCompleted, userState);
        }

        private void OngetForecastConfigurationsCompleted(object arg)
        {
            if ((this.getForecastConfigurationsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getForecastConfigurationsCompleted(this, new getForecastConfigurationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.wcc.nrcs.usda.gov/ns/awdbWebService", ResponseNamespace = "http://www.wcc.nrcs.usda.gov/ns/awdbWebService", ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use = System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public centralTendencyPeakData[] getCentralTendencyPeakData([System.Xml.Serialization.XmlElementAttribute("stationTriplets", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] stationTriplets, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string elementCd, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] heightDepth heightDepth, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] duration duration, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] bool getFlags, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] centralTendencyType centralTendencyType)
        {
            object[] results = this.Invoke("getCentralTendencyPeakData", new object[] {
                    stationTriplets,
                    elementCd,
                    heightDepth,
                    duration,
                    getFlags,
                    centralTendencyType});
            return ((centralTendencyPeakData[])(results[0]));
        }

        public System.IAsyncResult BegingetCentralTendencyPeakData(string[] stationTriplets, string elementCd, heightDepth heightDepth, duration duration, bool getFlags, centralTendencyType centralTendencyType, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("getCentralTendencyPeakData", new object[] {
                    stationTriplets,
                    elementCd,
                    heightDepth,
                    duration,
                    getFlags,
                    centralTendencyType}, callback, asyncState);
        }

        public centralTendencyPeakData[] EndgetCentralTendencyPeakData(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((centralTendencyPeakData[])(results[0]));
        }

        public void getCentralTendencyPeakDataAsync(string[] stationTriplets, string elementCd, heightDepth heightDepth, duration duration, bool getFlags, centralTendencyType centralTendencyType)
        {
            this.getCentralTendencyPeakDataAsync(stationTriplets, elementCd, heightDepth, duration, getFlags, centralTendencyType, null);
        }

        public void getCentralTendencyPeakDataAsync(string[] stationTriplets, string elementCd, heightDepth heightDepth, duration duration, bool getFlags, centralTendencyType centralTendencyType, object userState)
        {
            if ((this.getCentralTendencyPeakDataOperationCompleted == null))
            {
                this.getCentralTendencyPeakDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCentralTendencyPeakDataCompleted);
            }
            this.InvokeAsync("getCentralTendencyPeakData", new object[] {
                    stationTriplets,
                    elementCd,
                    heightDepth,
                    duration,
                    getFlags,
                    centralTendencyType}, this.getCentralTendencyPeakDataOperationCompleted, userState);
        }

        private void OngetCentralTendencyPeakDataCompleted(object arg)
        {
            if ((this.getCentralTendencyPeakDataCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCentralTendencyPeakDataCompleted(this, new getCentralTendencyPeakDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.wcc.nrcs.usda.gov/ns/awdbWebService", ResponseNamespace = "http://www.wcc.nrcs.usda.gov/ns/awdbWebService", ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use = System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public reservoirMetadata[] getReservoirMetadataMultiple([System.Xml.Serialization.XmlElementAttribute("stationTriplets", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] stationTriplets)
        {
            object[] results = this.Invoke("getReservoirMetadataMultiple", new object[] {
                    stationTriplets});
            return ((reservoirMetadata[])(results[0]));
        }

        public System.IAsyncResult BegingetReservoirMetadataMultiple(string[] stationTriplets, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("getReservoirMetadataMultiple", new object[] {
                    stationTriplets}, callback, asyncState);
        }

        public reservoirMetadata[] EndgetReservoirMetadataMultiple(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((reservoirMetadata[])(results[0]));
        }

        public void getReservoirMetadataMultipleAsync(string[] stationTriplets)
        {
            this.getReservoirMetadataMultipleAsync(stationTriplets, null);
        }

        public void getReservoirMetadataMultipleAsync(string[] stationTriplets, object userState)
        {
            if ((this.getReservoirMetadataMultipleOperationCompleted == null))
            {
                this.getReservoirMetadataMultipleOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetReservoirMetadataMultipleCompleted);
            }
            this.InvokeAsync("getReservoirMetadataMultiple", new object[] {
                    stationTriplets}, this.getReservoirMetadataMultipleOperationCompleted, userState);
        }

        private void OngetReservoirMetadataMultipleCompleted(object arg)
        {
            if ((this.getReservoirMetadataMultipleCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getReservoirMetadataMultipleCompleted(this, new getReservoirMetadataMultipleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.wcc.nrcs.usda.gov/ns/awdbWebService", ResponseNamespace = "http://www.wcc.nrcs.usda.gov/ns/awdbWebService", ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use = System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public forecast getForecast([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string stationTriplet, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string elementCd, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string forecastPeriod, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string publicationDate)
        {
            object[] results = this.Invoke("getForecast", new object[] {
                    stationTriplet,
                    elementCd,
                    forecastPeriod,
                    publicationDate});
            return ((forecast)(results[0]));
        }

        public System.IAsyncResult BegingetForecast(string stationTriplet, string elementCd, string forecastPeriod, string publicationDate, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("getForecast", new object[] {
                    stationTriplet,
                    elementCd,
                    forecastPeriod,
                    publicationDate}, callback, asyncState);
        }

        public forecast EndgetForecast(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((forecast)(results[0]));
        }

        public void getForecastAsync(string stationTriplet, string elementCd, string forecastPeriod, string publicationDate)
        {
            this.getForecastAsync(stationTriplet, elementCd, forecastPeriod, publicationDate, null);
        }

        public void getForecastAsync(string stationTriplet, string elementCd, string forecastPeriod, string publicationDate, object userState)
        {
            if ((this.getForecastOperationCompleted == null))
            {
                this.getForecastOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetForecastCompleted);
            }
            this.InvokeAsync("getForecast", new object[] {
                    stationTriplet,
                    elementCd,
                    forecastPeriod,
                    publicationDate}, this.getForecastOperationCompleted, userState);
        }

        private void OngetForecastCompleted(object arg)
        {
            if ((this.getForecastCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getForecastCompleted(this, new getForecastCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.wcc.nrcs.usda.gov/ns/awdbWebService", ResponseNamespace = "http://www.wcc.nrcs.usda.gov/ns/awdbWebService", ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use = System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public reservoirMetadata getReservoirMetadata([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string stationTriplet)
        {
            object[] results = this.Invoke("getReservoirMetadata", new object[] {
                    stationTriplet});
            return ((reservoirMetadata)(results[0]));
        }

        public System.IAsyncResult BegingetReservoirMetadata(string stationTriplet, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("getReservoirMetadata", new object[] {
                    stationTriplet}, callback, asyncState);
        }

        public reservoirMetadata EndgetReservoirMetadata(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((reservoirMetadata)(results[0]));
        }

        public void getReservoirMetadataAsync(string stationTriplet)
        {
            this.getReservoirMetadataAsync(stationTriplet, null);
        }

        public void getReservoirMetadataAsync(string stationTriplet, object userState)
        {
            if ((this.getReservoirMetadataOperationCompleted == null))
            {
                this.getReservoirMetadataOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetReservoirMetadataCompleted);
            }
            this.InvokeAsync("getReservoirMetadata", new object[] {
                    stationTriplet}, this.getReservoirMetadataOperationCompleted, userState);
        }

        private void OngetReservoirMetadataCompleted(object arg)
        {
            if ((this.getReservoirMetadataCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getReservoirMetadataCompleted(this, new getReservoirMetadataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.wcc.nrcs.usda.gov/ns/awdbWebService", ResponseNamespace = "http://www.wcc.nrcs.usda.gov/ns/awdbWebService", ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use = System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public forecastFull[] getAllForecastsForStation([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string stationTriplet, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string beginPublicationDate, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string endPublicationDate)
        {
            object[] results = this.Invoke("getAllForecastsForStation", new object[] {
                    stationTriplet,
                    beginPublicationDate,
                    endPublicationDate});
            return ((forecastFull[])(results[0]));
        }

        public System.IAsyncResult BegingetAllForecastsForStation(string stationTriplet, string beginPublicationDate, string endPublicationDate, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("getAllForecastsForStation", new object[] {
                    stationTriplet,
                    beginPublicationDate,
                    endPublicationDate}, callback, asyncState);
        }

        public forecastFull[] EndgetAllForecastsForStation(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((forecastFull[])(results[0]));
        }

        public void getAllForecastsForStationAsync(string stationTriplet, string beginPublicationDate, string endPublicationDate)
        {
            this.getAllForecastsForStationAsync(stationTriplet, beginPublicationDate, endPublicationDate, null);
        }

        public void getAllForecastsForStationAsync(string stationTriplet, string beginPublicationDate, string endPublicationDate, object userState)
        {
            if ((this.getAllForecastsForStationOperationCompleted == null))
            {
                this.getAllForecastsForStationOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllForecastsForStationCompleted);
            }
            this.InvokeAsync("getAllForecastsForStation", new object[] {
                    stationTriplet,
                    beginPublicationDate,
                    endPublicationDate}, this.getAllForecastsForStationOperationCompleted, userState);
        }

        private void OngetAllForecastsForStationCompleted(object arg)
        {
            if ((this.getAllForecastsForStationCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllForecastsForStationCompleted(this, new getAllForecastsForStationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.wcc.nrcs.usda.gov/ns/awdbWebService", ResponseNamespace = "http://www.wcc.nrcs.usda.gov/ns/awdbWebService", ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use = System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public forecastPeriodAverage[] getForecastPeriodAverages([System.Xml.Serialization.XmlElementAttribute("stationTriplets", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] stationTriplets, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string elementCd, [System.Xml.Serialization.XmlElementAttribute("periods", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] periods)
        {
            object[] results = this.Invoke("getForecastPeriodAverages", new object[] {
                    stationTriplets,
                    elementCd,
                    periods});
            return ((forecastPeriodAverage[])(results[0]));
        }

        public System.IAsyncResult BegingetForecastPeriodAverages(string[] stationTriplets, string elementCd, string[] periods, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("getForecastPeriodAverages", new object[] {
                    stationTriplets,
                    elementCd,
                    periods}, callback, asyncState);
        }

        public forecastPeriodAverage[] EndgetForecastPeriodAverages(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((forecastPeriodAverage[])(results[0]));
        }

        public void getForecastPeriodAveragesAsync(string[] stationTriplets, string elementCd, string[] periods)
        {
            this.getForecastPeriodAveragesAsync(stationTriplets, elementCd, periods, null);
        }

        public void getForecastPeriodAveragesAsync(string[] stationTriplets, string elementCd, string[] periods, object userState)
        {
            if ((this.getForecastPeriodAveragesOperationCompleted == null))
            {
                this.getForecastPeriodAveragesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetForecastPeriodAveragesCompleted);
            }
            this.InvokeAsync("getForecastPeriodAverages", new object[] {
                    stationTriplets,
                    elementCd,
                    periods}, this.getForecastPeriodAveragesOperationCompleted, userState);
        }

        private void OngetForecastPeriodAveragesCompleted(object arg)
        {
            if ((this.getForecastPeriodAveragesCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getForecastPeriodAveragesCompleted(this, new getForecastPeriodAveragesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.wcc.nrcs.usda.gov/ns/awdbWebService", ResponseNamespace = "http://www.wcc.nrcs.usda.gov/ns/awdbWebService", ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use = System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public stationElement[] getStationElements([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string stationTriplet, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string beginDate, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string endDate)
        {
            object[] results = this.Invoke("getStationElements", new object[] {
                    stationTriplet,
                    beginDate,
                    endDate});
            return ((stationElement[])(results[0]));
        }

        public System.IAsyncResult BegingetStationElements(string stationTriplet, string beginDate, string endDate, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("getStationElements", new object[] {
                    stationTriplet,
                    beginDate,
                    endDate}, callback, asyncState);
        }

        public stationElement[] EndgetStationElements(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((stationElement[])(results[0]));
        }

        public void getStationElementsAsync(string stationTriplet, string beginDate, string endDate)
        {
            this.getStationElementsAsync(stationTriplet, beginDate, endDate, null);
        }

        public void getStationElementsAsync(string stationTriplet, string beginDate, string endDate, object userState)
        {
            if ((this.getStationElementsOperationCompleted == null))
            {
                this.getStationElementsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetStationElementsCompleted);
            }
            this.InvokeAsync("getStationElements", new object[] {
                    stationTriplet,
                    beginDate,
                    endDate}, this.getStationElementsOperationCompleted, userState);
        }

        private void OngetStationElementsCompleted(object arg)
        {
            if ((this.getStationElementsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getStationElementsCompleted(this, new getStationElementsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.wcc.nrcs.usda.gov/ns/awdbWebService", ResponseNamespace = "http://www.wcc.nrcs.usda.gov/ns/awdbWebService", ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use = System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public instantaneousData[] getInstantaneousData([System.Xml.Serialization.XmlElementAttribute("stationTriplets", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] stationTriplets, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string elementCd, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] int ordinal, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] heightDepth heightDepth, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string beginDate, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string endDate, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] instantaneousDataFilter filter, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] unitSystem unitSystem)
        {
            object[] results = this.Invoke("getInstantaneousData", new object[] {
                    stationTriplets,
                    elementCd,
                    ordinal,
                    heightDepth,
                    beginDate,
                    endDate,
                    filter,
                    unitSystem});
            return ((instantaneousData[])(results[0]));
        }

        public System.IAsyncResult BegingetInstantaneousData(string[] stationTriplets, string elementCd, int ordinal, heightDepth heightDepth, string beginDate, string endDate, instantaneousDataFilter filter, unitSystem unitSystem, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("getInstantaneousData", new object[] {
                    stationTriplets,
                    elementCd,
                    ordinal,
                    heightDepth,
                    beginDate,
                    endDate,
                    filter,
                    unitSystem}, callback, asyncState);
        }

        public instantaneousData[] EndgetInstantaneousData(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((instantaneousData[])(results[0]));
        }

        public void getInstantaneousDataAsync(string[] stationTriplets, string elementCd, int ordinal, heightDepth heightDepth, string beginDate, string endDate, instantaneousDataFilter filter, unitSystem unitSystem)
        {
            this.getInstantaneousDataAsync(stationTriplets, elementCd, ordinal, heightDepth, beginDate, endDate, filter, unitSystem, null);
        }

        public void getInstantaneousDataAsync(string[] stationTriplets, string elementCd, int ordinal, heightDepth heightDepth, string beginDate, string endDate, instantaneousDataFilter filter, unitSystem unitSystem, object userState)
        {
            if ((this.getInstantaneousDataOperationCompleted == null))
            {
                this.getInstantaneousDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetInstantaneousDataCompleted);
            }
            this.InvokeAsync("getInstantaneousData", new object[] {
                    stationTriplets,
                    elementCd,
                    ordinal,
                    heightDepth,
                    beginDate,
                    endDate,
                    filter,
                    unitSystem}, this.getInstantaneousDataOperationCompleted, userState);
        }

        private void OngetInstantaneousDataCompleted(object arg)
        {
            if ((this.getInstantaneousDataCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getInstantaneousDataCompleted(this, new getInstantaneousDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.wcc.nrcs.usda.gov/ns/awdbWebService", ResponseNamespace = "http://www.wcc.nrcs.usda.gov/ns/awdbWebService", ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use = System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public data[] getData([System.Xml.Serialization.XmlElementAttribute("stationTriplets", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] stationTriplets, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string elementCd, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] int ordinal, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] heightDepth heightDepth, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] duration duration, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] bool getFlags, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string beginDate, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string endDate, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] bool alwaysReturnDailyFeb29)
        {
            object[] results = this.Invoke("getData", new object[] {
                    stationTriplets,
                    elementCd,
                    ordinal,
                    heightDepth,
                    duration,
                    getFlags,
                    beginDate,
                    endDate,
                    alwaysReturnDailyFeb29});
            return ((data[])(results[0]));
        }

        public System.IAsyncResult BegingetData(string[] stationTriplets, string elementCd, int ordinal, heightDepth heightDepth, duration duration, bool getFlags, string beginDate, string endDate, bool alwaysReturnDailyFeb29, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("getData", new object[] {
                    stationTriplets,
                    elementCd,
                    ordinal,
                    heightDepth,
                    duration,
                    getFlags,
                    beginDate,
                    endDate,
                    alwaysReturnDailyFeb29}, callback, asyncState);
        }

        public data[] EndgetData(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((data[])(results[0]));
        }

        public void getDataAsync(string[] stationTriplets, string elementCd, int ordinal, heightDepth heightDepth, duration duration, bool getFlags, string beginDate, string endDate, bool alwaysReturnDailyFeb29)
        {
            this.getDataAsync(stationTriplets, elementCd, ordinal, heightDepth, duration, getFlags, beginDate, endDate, alwaysReturnDailyFeb29, null);
        }

        public void getDataAsync(string[] stationTriplets, string elementCd, int ordinal, heightDepth heightDepth, duration duration, bool getFlags, string beginDate, string endDate, bool alwaysReturnDailyFeb29, object userState)
        {
            if ((this.getDataOperationCompleted == null))
            {
                this.getDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDataCompleted);
            }
            this.InvokeAsync("getData", new object[] {
                    stationTriplets,
                    elementCd,
                    ordinal,
                    heightDepth,
                    duration,
                    getFlags,
                    beginDate,
                    endDate,
                    alwaysReturnDailyFeb29}, this.getDataOperationCompleted, userState);
        }

        private void OngetDataCompleted(object arg)
        {
            if ((this.getDataCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDataCompleted(this, new getDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.wcc.nrcs.usda.gov/ns/awdbWebService", ResponseNamespace = "http://www.wcc.nrcs.usda.gov/ns/awdbWebService", ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use = System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public centralTendencyData[] getCentralTendencyData([System.Xml.Serialization.XmlElementAttribute("stationTriplets", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] stationTriplets, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string elementCd, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] heightDepth heightDepth, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] duration duration, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] bool getFlags, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] int beginMonth, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] int beginDay, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] int endMonth, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] int endDay, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] centralTendencyType centralTendencyType)
        {
            object[] results = this.Invoke("getCentralTendencyData", new object[] {
                    stationTriplets,
                    elementCd,
                    heightDepth,
                    duration,
                    getFlags,
                    beginMonth,
                    beginDay,
                    endMonth,
                    endDay,
                    centralTendencyType});
            return ((centralTendencyData[])(results[0]));
        }

        public System.IAsyncResult BegingetCentralTendencyData(string[] stationTriplets, string elementCd, heightDepth heightDepth, duration duration, bool getFlags, int beginMonth, int beginDay, int endMonth, int endDay, centralTendencyType centralTendencyType, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("getCentralTendencyData", new object[] {
                    stationTriplets,
                    elementCd,
                    heightDepth,
                    duration,
                    getFlags,
                    beginMonth,
                    beginDay,
                    endMonth,
                    endDay,
                    centralTendencyType}, callback, asyncState);
        }

        public centralTendencyData[] EndgetCentralTendencyData(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((centralTendencyData[])(results[0]));
        }

        public void getCentralTendencyDataAsync(string[] stationTriplets, string elementCd, heightDepth heightDepth, duration duration, bool getFlags, int beginMonth, int beginDay, int endMonth, int endDay, centralTendencyType centralTendencyType)
        {
            this.getCentralTendencyDataAsync(stationTriplets, elementCd, heightDepth, duration, getFlags, beginMonth, beginDay, endMonth, endDay, centralTendencyType, null);
        }

        public void getCentralTendencyDataAsync(string[] stationTriplets, string elementCd, heightDepth heightDepth, duration duration, bool getFlags, int beginMonth, int beginDay, int endMonth, int endDay, centralTendencyType centralTendencyType, object userState)
        {
            if ((this.getCentralTendencyDataOperationCompleted == null))
            {
                this.getCentralTendencyDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCentralTendencyDataCompleted);
            }
            this.InvokeAsync("getCentralTendencyData", new object[] {
                    stationTriplets,
                    elementCd,
                    heightDepth,
                    duration,
                    getFlags,
                    beginMonth,
                    beginDay,
                    endMonth,
                    endDay,
                    centralTendencyType}, this.getCentralTendencyDataOperationCompleted, userState);
        }

        private void OngetCentralTendencyDataCompleted(object arg)
        {
            if ((this.getCentralTendencyDataCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCentralTendencyDataCompleted(this, new getCentralTendencyDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.wcc.nrcs.usda.gov/ns/awdbWebService", ResponseNamespace = "http://www.wcc.nrcs.usda.gov/ns/awdbWebService", ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use = System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public forecastPeriod[] getForecastPeriods()
        {
            object[] results = this.Invoke("getForecastPeriods", new object[0]);
            return ((forecastPeriod[])(results[0]));
        }

        public System.IAsyncResult BegingetForecastPeriods(System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("getForecastPeriods", new object[0], callback, asyncState);
        }

        public forecastPeriod[] EndgetForecastPeriods(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((forecastPeriod[])(results[0]));
        }

        public void getForecastPeriodsAsync()
        {
            this.getForecastPeriodsAsync(null);
        }

        public void getForecastPeriodsAsync(object userState)
        {
            if ((this.getForecastPeriodsOperationCompleted == null))
            {
                this.getForecastPeriodsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetForecastPeriodsCompleted);
            }
            this.InvokeAsync("getForecastPeriods", new object[0], this.getForecastPeriodsOperationCompleted, userState);
        }

        private void OngetForecastPeriodsCompleted(object arg)
        {
            if ((this.getForecastPeriodsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getForecastPeriodsCompleted(this, new getForecastPeriodsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.wcc.nrcs.usda.gov/ns/awdbWebService", ResponseNamespace = "http://www.wcc.nrcs.usda.gov/ns/awdbWebService", ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use = System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public heightDepth[] getHeightDepths()
        {
            object[] results = this.Invoke("getHeightDepths", new object[0]);
            return ((heightDepth[])(results[0]));
        }

        public System.IAsyncResult BegingetHeightDepths(System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("getHeightDepths", new object[0], callback, asyncState);
        }

        public heightDepth[] EndgetHeightDepths(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((heightDepth[])(results[0]));
        }

        public void getHeightDepthsAsync()
        {
            this.getHeightDepthsAsync(null);
        }

        public void getHeightDepthsAsync(object userState)
        {
            if ((this.getHeightDepthsOperationCompleted == null))
            {
                this.getHeightDepthsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetHeightDepthsCompleted);
            }
            this.InvokeAsync("getHeightDepths", new object[0], this.getHeightDepthsOperationCompleted, userState);
        }

        private void OngetHeightDepthsCompleted(object arg)
        {
            if ((this.getHeightDepthsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getHeightDepthsCompleted(this, new getHeightDepthsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.wcc.nrcs.usda.gov/ns/awdbWebService", ResponseNamespace = "http://www.wcc.nrcs.usda.gov/ns/awdbWebService", ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use = System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public forecastPoint[] getForecastPoints([System.Xml.Serialization.XmlElementAttribute("stationIds", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] stationIds, [System.Xml.Serialization.XmlElementAttribute("stateCds", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] stateCds, [System.Xml.Serialization.XmlElementAttribute("networkCds", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] networkCds, [System.Xml.Serialization.XmlElementAttribute("forecastPointNames", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] forecastPointNames, [System.Xml.Serialization.XmlElementAttribute("hucs", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] hucs, [System.Xml.Serialization.XmlElementAttribute("forecasters", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] forecasters, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] bool logicalAnd)
        {
            object[] results = this.Invoke("getForecastPoints", new object[] {
                    stationIds,
                    stateCds,
                    networkCds,
                    forecastPointNames,
                    hucs,
                    forecasters,
                    logicalAnd});
            return ((forecastPoint[])(results[0]));
        }

        public System.IAsyncResult BegingetForecastPoints(string[] stationIds, string[] stateCds, string[] networkCds, string[] forecastPointNames, string[] hucs, string[] forecasters, bool logicalAnd, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("getForecastPoints", new object[] {
                    stationIds,
                    stateCds,
                    networkCds,
                    forecastPointNames,
                    hucs,
                    forecasters,
                    logicalAnd}, callback, asyncState);
        }

        public forecastPoint[] EndgetForecastPoints(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((forecastPoint[])(results[0]));
        }

        public void getForecastPointsAsync(string[] stationIds, string[] stateCds, string[] networkCds, string[] forecastPointNames, string[] hucs, string[] forecasters, bool logicalAnd)
        {
            this.getForecastPointsAsync(stationIds, stateCds, networkCds, forecastPointNames, hucs, forecasters, logicalAnd, null);
        }

        public void getForecastPointsAsync(string[] stationIds, string[] stateCds, string[] networkCds, string[] forecastPointNames, string[] hucs, string[] forecasters, bool logicalAnd, object userState)
        {
            if ((this.getForecastPointsOperationCompleted == null))
            {
                this.getForecastPointsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetForecastPointsCompleted);
            }
            this.InvokeAsync("getForecastPoints", new object[] {
                    stationIds,
                    stateCds,
                    networkCds,
                    forecastPointNames,
                    hucs,
                    forecasters,
                    logicalAnd}, this.getForecastPointsOperationCompleted, userState);
        }

        private void OngetForecastPointsCompleted(object arg)
        {
            if ((this.getForecastPointsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getForecastPointsCompleted(this, new getForecastPointsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.wcc.nrcs.usda.gov/ns/awdbWebService", ResponseNamespace = "http://www.wcc.nrcs.usda.gov/ns/awdbWebService", ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use = System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public stationMetaData getStationMetadata([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string stationTriplet)
        {
            object[] results = this.Invoke("getStationMetadata", new object[] {
                    stationTriplet});
            return ((stationMetaData)(results[0]));
        }

        public System.IAsyncResult BegingetStationMetadata(string stationTriplet, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("getStationMetadata", new object[] {
                    stationTriplet}, callback, asyncState);
        }

        public stationMetaData EndgetStationMetadata(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((stationMetaData)(results[0]));
        }

        public void getStationMetadataAsync(string stationTriplet)
        {
            this.getStationMetadataAsync(stationTriplet, null);
        }

        public void getStationMetadataAsync(string stationTriplet, object userState)
        {
            if ((this.getStationMetadataOperationCompleted == null))
            {
                this.getStationMetadataOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetStationMetadataCompleted);
            }
            this.InvokeAsync("getStationMetadata", new object[] {
                    stationTriplet}, this.getStationMetadataOperationCompleted, userState);
        }

        private void OngetStationMetadataCompleted(object arg)
        {
            if ((this.getStationMetadataCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getStationMetadataCompleted(this, new getStationMetadataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.wcc.nrcs.usda.gov/ns/awdbWebService", ResponseNamespace = "http://www.wcc.nrcs.usda.gov/ns/awdbWebService", ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use = System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool areYouThere()
        {
            object[] results = this.Invoke("areYouThere", new object[0]);
            return ((bool)(results[0]));
        }

        public System.IAsyncResult BeginareYouThere(System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("areYouThere", new object[0], callback, asyncState);
        }

        public bool EndareYouThere(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        public void areYouThereAsync()
        {
            this.areYouThereAsync(null);
        }

        public void areYouThereAsync(object userState)
        {
            if ((this.areYouThereOperationCompleted == null))
            {
                this.areYouThereOperationCompleted = new System.Threading.SendOrPostCallback(this.OnareYouThereCompleted);
            }
            this.InvokeAsync("areYouThere", new object[0], this.areYouThereOperationCompleted, userState);
        }

        private void OnareYouThereCompleted(object arg)
        {
            if ((this.areYouThereCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.areYouThereCompleted(this, new areYouThereCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.wcc.nrcs.usda.gov/ns/awdbWebService", ResponseNamespace = "http://www.wcc.nrcs.usda.gov/ns/awdbWebService", ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use = System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public averagesPeakData[] getAveragesPeak([System.Xml.Serialization.XmlElementAttribute("stationTriplets", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] stationTriplets, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string elementCd, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] heightDepth heightDepth, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] duration duration, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] bool getFlags)
        {
            object[] results = this.Invoke("getAveragesPeak", new object[] {
                    stationTriplets,
                    elementCd,
                    heightDepth,
                    duration,
                    getFlags});
            return ((averagesPeakData[])(results[0]));
        }

        public System.IAsyncResult BegingetAveragesPeak(string[] stationTriplets, string elementCd, heightDepth heightDepth, duration duration, bool getFlags, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("getAveragesPeak", new object[] {
                    stationTriplets,
                    elementCd,
                    heightDepth,
                    duration,
                    getFlags}, callback, asyncState);
        }

        public averagesPeakData[] EndgetAveragesPeak(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((averagesPeakData[])(results[0]));
        }

        public void getAveragesPeakAsync(string[] stationTriplets, string elementCd, heightDepth heightDepth, duration duration, bool getFlags)
        {
            this.getAveragesPeakAsync(stationTriplets, elementCd, heightDepth, duration, getFlags, null);
        }

        public void getAveragesPeakAsync(string[] stationTriplets, string elementCd, heightDepth heightDepth, duration duration, bool getFlags, object userState)
        {
            if ((this.getAveragesPeakOperationCompleted == null))
            {
                this.getAveragesPeakOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAveragesPeakCompleted);
            }
            this.InvokeAsync("getAveragesPeak", new object[] {
                    stationTriplets,
                    elementCd,
                    heightDepth,
                    duration,
                    getFlags}, this.getAveragesPeakOperationCompleted, userState);
        }

        private void OngetAveragesPeakCompleted(object arg)
        {
            if ((this.getAveragesPeakCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAveragesPeakCompleted(this, new getAveragesPeakCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.wcc.nrcs.usda.gov/ns/awdbWebService", ResponseNamespace = "http://www.wcc.nrcs.usda.gov/ns/awdbWebService", ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use = System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public peakData[] getPeakData([System.Xml.Serialization.XmlElementAttribute("stationTriplets", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] stationTriplets, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string elementCd, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] int ordinal, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] heightDepth heightDepth, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] duration duration, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] bool getFlags, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] int beginYear, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] int endYear)
        {
            object[] results = this.Invoke("getPeakData", new object[] {
                    stationTriplets,
                    elementCd,
                    ordinal,
                    heightDepth,
                    duration,
                    getFlags,
                    beginYear,
                    endYear});
            return ((peakData[])(results[0]));
        }

        public System.IAsyncResult BegingetPeakData(string[] stationTriplets, string elementCd, int ordinal, heightDepth heightDepth, duration duration, bool getFlags, int beginYear, int endYear, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("getPeakData", new object[] {
                    stationTriplets,
                    elementCd,
                    ordinal,
                    heightDepth,
                    duration,
                    getFlags,
                    beginYear,
                    endYear}, callback, asyncState);
        }

        public peakData[] EndgetPeakData(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((peakData[])(results[0]));
        }

        public void getPeakDataAsync(string[] stationTriplets, string elementCd, int ordinal, heightDepth heightDepth, duration duration, bool getFlags, int beginYear, int endYear)
        {
            this.getPeakDataAsync(stationTriplets, elementCd, ordinal, heightDepth, duration, getFlags, beginYear, endYear, null);
        }

        public void getPeakDataAsync(string[] stationTriplets, string elementCd, int ordinal, heightDepth heightDepth, duration duration, bool getFlags, int beginYear, int endYear, object userState)
        {
            if ((this.getPeakDataOperationCompleted == null))
            {
                this.getPeakDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPeakDataCompleted);
            }
            this.InvokeAsync("getPeakData", new object[] {
                    stationTriplets,
                    elementCd,
                    ordinal,
                    heightDepth,
                    duration,
                    getFlags,
                    beginYear,
                    endYear}, this.getPeakDataOperationCompleted, userState);
        }

        private void OngetPeakDataCompleted(object arg)
        {
            if ((this.getPeakDataCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPeakDataCompleted(this, new getPeakDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.wcc.nrcs.usda.gov/ns/awdbWebService", ResponseNamespace = "http://www.wcc.nrcs.usda.gov/ns/awdbWebService", ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use = System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public unit[] getUnits()
        {
            object[] results = this.Invoke("getUnits", new object[0]);
            return ((unit[])(results[0]));
        }

        public System.IAsyncResult BegingetUnits(System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("getUnits", new object[0], callback, asyncState);
        }

        public unit[] EndgetUnits(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((unit[])(results[0]));
        }

        public void getUnitsAsync()
        {
            this.getUnitsAsync(null);
        }

        public void getUnitsAsync(object userState)
        {
            if ((this.getUnitsOperationCompleted == null))
            {
                this.getUnitsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUnitsCompleted);
            }
            this.InvokeAsync("getUnits", new object[0], this.getUnitsOperationCompleted, userState);
        }

        private void OngetUnitsCompleted(object arg)
        {
            if ((this.getUnitsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUnitsCompleted(this, new getUnitsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.wcc.nrcs.usda.gov/ns/awdbWebService", ResponseNamespace = "http://www.wcc.nrcs.usda.gov/ns/awdbWebService", ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use = System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public element[] getElements()
        {
            object[] results = this.Invoke("getElements", new object[0]);
            return ((element[])(results[0]));
        }

        public System.IAsyncResult BegingetElements(System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("getElements", new object[0], callback, asyncState);
        }

        public element[] EndgetElements(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((element[])(results[0]));
        }

        public void getElementsAsync()
        {
            this.getElementsAsync(null);
        }

        public void getElementsAsync(object userState)
        {
            if ((this.getElementsOperationCompleted == null))
            {
                this.getElementsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetElementsCompleted);
            }
            this.InvokeAsync("getElements", new object[0], this.getElementsOperationCompleted, userState);
        }

        private void OngetElementsCompleted(object arg)
        {
            if ((this.getElementsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getElementsCompleted(this, new getElementsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.wcc.nrcs.usda.gov/ns/awdbWebService")]
    public partial class forecast
    {

        private string calculationDateField;

        private string elementCdField;

        private System.Nullable<int>[] exceedenceProbabilitiesField;

        private System.Nullable<decimal>[] exceedenceValuesField;

        private string forecastPeriodField;

        private decimal periodAverageField;

        private bool periodAverageSpecifiedField;

        private string publicationDateField;

        private string stationTripletField;

        private string unitCdField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string calculationDate
        {
            get
            {
                return this.calculationDateField;
            }
            set
            {
                this.calculationDateField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string elementCd
        {
            get
            {
                return this.elementCdField;
            }
            set
            {
                this.elementCdField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("exceedenceProbabilities", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true, DataType = "int")]
        public System.Nullable<int>[] exceedenceProbabilities
        {
            get
            {
                return this.exceedenceProbabilitiesField;
            }
            set
            {
                this.exceedenceProbabilitiesField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("exceedenceValues", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true, DataType = "decimal")]
        public System.Nullable<decimal>[] exceedenceValues
        {
            get
            {
                return this.exceedenceValuesField;
            }
            set
            {
                this.exceedenceValuesField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string forecastPeriod
        {
            get
            {
                return this.forecastPeriodField;
            }
            set
            {
                this.forecastPeriodField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public decimal periodAverage
        {
            get
            {
                return this.periodAverageField;
            }
            set
            {
                this.periodAverageField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public virtual bool periodAverageSpecified
        {
            get
            {
                return this.periodAverageSpecifiedField;
            }
            set
            {
                this.periodAverageSpecifiedField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string publicationDate
        {
            get
            {
                return this.publicationDateField;
            }
            set
            {
                this.publicationDateField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string stationTriplet
        {
            get
            {
                return this.stationTripletField;
            }
            set
            {
                this.stationTripletField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string unitCd
        {
            get
            {
                return this.unitCdField;
            }
            set
            {
                this.unitCdField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.wcc.nrcs.usda.gov/ns/awdbWebService")]
    public partial class heightDepth
    {

        private string unitCdField1;

        private decimal valueField;

        private bool valueSpecifiedField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string unitCd
        {
            get
            {
                return this.unitCdField1;
            }
            set
            {
                this.unitCdField1 = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public decimal value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                this.valueField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public virtual bool valueSpecified
        {
            get
            {
                return this.valueSpecifiedField;
            }
            set
            {
                this.valueSpecifiedField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.wcc.nrcs.usda.gov/ns/awdbWebService")]
    public enum duration
    {

        /// <remarks/>
        DAILY,

        /// <remarks/>
        MONTHLY,

        /// <remarks/>
        SEMIMONTHLY,

        /// <remarks/>
        INSTANTANEOUS,

        /// <remarks/>
        ANNUAL,

        /// <remarks/>
        SEASONAL,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.wcc.nrcs.usda.gov/ns/awdbWebService")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(centralTendencyData))]
    public partial class averagesData
    {

        private int beginDayField;

        private int beginMonthField;

        private string dataSetFlagField;

        private duration durationField;

        private bool durationSpecifiedField;

        private int endDayField;

        private int endMonthField;

        private string[] flagsField;

        private System.Nullable<decimal>[] valuesField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int beginDay
        {
            get
            {
                return this.beginDayField;
            }
            set
            {
                this.beginDayField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int beginMonth
        {
            get
            {
                return this.beginMonthField;
            }
            set
            {
                this.beginMonthField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string dataSetFlag
        {
            get
            {
                return this.dataSetFlagField;
            }
            set
            {
                this.dataSetFlagField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public duration duration
        {
            get
            {
                return this.durationField;
            }
            set
            {
                this.durationField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public virtual bool durationSpecified
        {
            get
            {
                return this.durationSpecifiedField;
            }
            set
            {
                this.durationSpecifiedField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int endDay
        {
            get
            {
                return this.endDayField;
            }
            set
            {
                this.endDayField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int endMonth
        {
            get
            {
                return this.endMonthField;
            }
            set
            {
                this.endMonthField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("flags", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string[] flags
        {
            get
            {
                return this.flagsField;
            }
            set
            {
                this.flagsField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("values", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true, DataType = "decimal")]
        public System.Nullable<decimal>[] values
        {
            get
            {
                return this.valuesField;
            }
            set
            {
                this.valuesField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.wcc.nrcs.usda.gov/ns/awdbWebService")]
    public partial class centralTendencyData : averagesData
    {

        private centralTendencyType centralTendencyTypeField;

        private bool centralTendencyTypeSpecifiedField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public centralTendencyType centralTendencyType
        {
            get
            {
                return this.centralTendencyTypeField;
            }
            set
            {
                this.centralTendencyTypeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public virtual bool centralTendencyTypeSpecified
        {
            get
            {
                return this.centralTendencyTypeSpecifiedField;
            }
            set
            {
                this.centralTendencyTypeSpecifiedField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.wcc.nrcs.usda.gov/ns/awdbWebService")]
    public enum centralTendencyType
    {

        /// <remarks/>
        AVERAGE,

        /// <remarks/>
        MEDIAN,

        /// <remarks/>
        NORMAL,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.wcc.nrcs.usda.gov/ns/awdbWebService")]
    public partial class hourlyData
    {

        private string beginDateField;

        private string endDateField;

        private string stationTripletField3;

        private hourlyDataValue[] valuesField1;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string beginDate
        {
            get
            {
                return this.beginDateField;
            }
            set
            {
                this.beginDateField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string endDate
        {
            get
            {
                return this.endDateField;
            }
            set
            {
                this.endDateField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string stationTriplet
        {
            get
            {
                return this.stationTripletField3;
            }
            set
            {
                this.stationTripletField3 = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("values", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public hourlyDataValue[] values
        {
            get
            {
                return this.valuesField1;
            }
            set
            {
                this.valuesField1 = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.wcc.nrcs.usda.gov/ns/awdbWebService")]
    public partial class hourlyDataValue
    {

        private string dateTimeField;

        private string flagField;

        private decimal valueField1;

        private bool valueSpecifiedField1;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string dateTime
        {
            get
            {
                return this.dateTimeField;
            }
            set
            {
                this.dateTimeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string flag
        {
            get
            {
                return this.flagField;
            }
            set
            {
                this.flagField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public decimal value
        {
            get
            {
                return this.valueField1;
            }
            set
            {
                this.valueField1 = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public virtual bool valueSpecified
        {
            get
            {
                return this.valueSpecifiedField1;
            }
            set
            {
                this.valueSpecifiedField1 = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.wcc.nrcs.usda.gov/ns/awdbWebService")]
    public partial class diagnostics
    {

        private bool hasSucceededField;

        private diagnosticTestResult[] testResultsField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool hasSucceeded
        {
            get
            {
                return this.hasSucceededField;
            }
            set
            {
                this.hasSucceededField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("testResults", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public diagnosticTestResult[] testResults
        {
            get
            {
                return this.testResultsField;
            }
            set
            {
                this.testResultsField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.wcc.nrcs.usda.gov/ns/awdbWebService")]
    public partial class diagnosticTestResult
    {

        private string errorMessageField;

        private diagnosticException exceptionField;

        private bool hasSucceededField1;

        private string testDescriptionField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string errorMessage
        {
            get
            {
                return this.errorMessageField;
            }
            set
            {
                this.errorMessageField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public diagnosticException exception
        {
            get
            {
                return this.exceptionField;
            }
            set
            {
                this.exceptionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool hasSucceeded
        {
            get
            {
                return this.hasSucceededField1;
            }
            set
            {
                this.hasSucceededField1 = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string testDescription
        {
            get
            {
                return this.testDescriptionField;
            }
            set
            {
                this.testDescriptionField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.wcc.nrcs.usda.gov/ns/awdbWebService")]
    public partial class diagnosticException
    {

        private diagnosticException causeField;

        private string exceptionClassField;

        private string messageField;

        private diagnosticStackTraceElement[] strackTraceField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public diagnosticException cause
        {
            get
            {
                return this.causeField;
            }
            set
            {
                this.causeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string exceptionClass
        {
            get
            {
                return this.exceptionClassField;
            }
            set
            {
                this.exceptionClassField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string message
        {
            get
            {
                return this.messageField;
            }
            set
            {
                this.messageField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("strackTrace", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public diagnosticStackTraceElement[] strackTrace
        {
            get
            {
                return this.strackTraceField;
            }
            set
            {
                this.strackTraceField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.wcc.nrcs.usda.gov/ns/awdbWebService")]
    public partial class diagnosticStackTraceElement
    {

        private string classNameField;

        private string fileNameField;

        private int lineNumberField;

        private string methodNameField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string className
        {
            get
            {
                return this.classNameField;
            }
            set
            {
                this.classNameField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string fileName
        {
            get
            {
                return this.fileNameField;
            }
            set
            {
                this.fileNameField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int lineNumber
        {
            get
            {
                return this.lineNumberField;
            }
            set
            {
                this.lineNumberField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string methodName
        {
            get
            {
                return this.methodNameField;
            }
            set
            {
                this.methodNameField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.wcc.nrcs.usda.gov/ns/awdbWebService")]
    public partial class forecastEquation
    {

        private string commentField;

        private string dataSourceField;

        private string elementCdField5;

        private forecastEquationTerm[] equationTermsField;

        private string footnotesField;

        private string forecastConditionField;

        private string forecastPeriodField3;

        private string forecastTypeField;

        private string functionField;

        private decimal functionArgumentField;

        private bool functionArgumentSpecifiedField;

        private decimal interceptConstantField;

        private bool interceptConstantSpecifiedField;

        private int keyField;

        private decimal maxOfRecordField;

        private bool maxOfRecordSpecifiedField;

        private decimal minOfRecordField;

        private bool minOfRecordSpecifiedField;

        private System.Nullable<decimal>[] monthlyCorrelationCoefficientsField;

        private System.Nullable<decimal>[] monthlyStderrValuesField;

        private string nameField;

        private monthAndDay[] publicationMonthsAndDaysField;

        private bool publishedField;

        private string stationTripletField5;

        private bool transformErrorsOnlyField;

        private string unitCdField3;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string comment
        {
            get
            {
                return this.commentField;
            }
            set
            {
                this.commentField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string dataSource
        {
            get
            {
                return this.dataSourceField;
            }
            set
            {
                this.dataSourceField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string elementCd
        {
            get
            {
                return this.elementCdField5;
            }
            set
            {
                this.elementCdField5 = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("equationTerms", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public forecastEquationTerm[] equationTerms
        {
            get
            {
                return this.equationTermsField;
            }
            set
            {
                this.equationTermsField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string footnotes
        {
            get
            {
                return this.footnotesField;
            }
            set
            {
                this.footnotesField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string forecastCondition
        {
            get
            {
                return this.forecastConditionField;
            }
            set
            {
                this.forecastConditionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string forecastPeriod
        {
            get
            {
                return this.forecastPeriodField3;
            }
            set
            {
                this.forecastPeriodField3 = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string forecastType
        {
            get
            {
                return this.forecastTypeField;
            }
            set
            {
                this.forecastTypeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string function
        {
            get
            {
                return this.functionField;
            }
            set
            {
                this.functionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public decimal functionArgument
        {
            get
            {
                return this.functionArgumentField;
            }
            set
            {
                this.functionArgumentField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public virtual bool functionArgumentSpecified
        {
            get
            {
                return this.functionArgumentSpecifiedField;
            }
            set
            {
                this.functionArgumentSpecifiedField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public decimal interceptConstant
        {
            get
            {
                return this.interceptConstantField;
            }
            set
            {
                this.interceptConstantField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public virtual bool interceptConstantSpecified
        {
            get
            {
                return this.interceptConstantSpecifiedField;
            }
            set
            {
                this.interceptConstantSpecifiedField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int key
        {
            get
            {
                return this.keyField;
            }
            set
            {
                this.keyField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public decimal maxOfRecord
        {
            get
            {
                return this.maxOfRecordField;
            }
            set
            {
                this.maxOfRecordField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public virtual bool maxOfRecordSpecified
        {
            get
            {
                return this.maxOfRecordSpecifiedField;
            }
            set
            {
                this.maxOfRecordSpecifiedField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public decimal minOfRecord
        {
            get
            {
                return this.minOfRecordField;
            }
            set
            {
                this.minOfRecordField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public virtual bool minOfRecordSpecified
        {
            get
            {
                return this.minOfRecordSpecifiedField;
            }
            set
            {
                this.minOfRecordSpecifiedField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("monthlyCorrelationCoefficients", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true, DataType = "decimal")]
        public System.Nullable<decimal>[] monthlyCorrelationCoefficients
        {
            get
            {
                return this.monthlyCorrelationCoefficientsField;
            }
            set
            {
                this.monthlyCorrelationCoefficientsField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("monthlyStderrValues", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true, DataType = "decimal")]
        public System.Nullable<decimal>[] monthlyStderrValues
        {
            get
            {
                return this.monthlyStderrValuesField;
            }
            set
            {
                this.monthlyStderrValuesField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("publicationMonthsAndDays", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public monthAndDay[] publicationMonthsAndDays
        {
            get
            {
                return this.publicationMonthsAndDaysField;
            }
            set
            {
                this.publicationMonthsAndDaysField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool published
        {
            get
            {
                return this.publishedField;
            }
            set
            {
                this.publishedField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string stationTriplet
        {
            get
            {
                return this.stationTripletField5;
            }
            set
            {
                this.stationTripletField5 = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool transformErrorsOnly
        {
            get
            {
                return this.transformErrorsOnlyField;
            }
            set
            {
                this.transformErrorsOnlyField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string unitCd
        {
            get
            {
                return this.unitCdField3;
            }
            set
            {
                this.unitCdField3 = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.wcc.nrcs.usda.gov/ns/awdbWebService")]
    public partial class forecastEquationTerm
    {

        private decimal coefficientField;

        private bool coefficientSpecifiedField;

        private string dataPeriodDaysField;

        private string dataPeriodMonthField;

        private string dataYearFlagField;

        private stationElement stationElementField;

        private string unitCdField2;

        private bool upstreamForecastField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public decimal coefficient
        {
            get
            {
                return this.coefficientField;
            }
            set
            {
                this.coefficientField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public virtual bool coefficientSpecified
        {
            get
            {
                return this.coefficientSpecifiedField;
            }
            set
            {
                this.coefficientSpecifiedField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string dataPeriodDays
        {
            get
            {
                return this.dataPeriodDaysField;
            }
            set
            {
                this.dataPeriodDaysField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string dataPeriodMonth
        {
            get
            {
                return this.dataPeriodMonthField;
            }
            set
            {
                this.dataPeriodMonthField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string dataYearFlag
        {
            get
            {
                return this.dataYearFlagField;
            }
            set
            {
                this.dataYearFlagField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public stationElement stationElement
        {
            get
            {
                return this.stationElementField;
            }
            set
            {
                this.stationElementField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string unitCd
        {
            get
            {
                return this.unitCdField2;
            }
            set
            {
                this.unitCdField2 = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool upstreamForecast
        {
            get
            {
                return this.upstreamForecastField;
            }
            set
            {
                this.upstreamForecastField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.wcc.nrcs.usda.gov/ns/awdbWebService")]
    public partial class stationElement
    {

        private string beginDateField2;

        private int dataPrecisionField;

        private bool dataPrecisionSpecifiedField;

        private dataSource dataSourceField1;

        private bool dataSourceSpecifiedField;

        private duration durationField2;

        private bool durationSpecifiedField1;

        private string elementCdField6;

        private string endDateField2;

        private heightDepth heightDepthField2;

        private int ordinalField1;

        private string originalUnitCdField;

        private string stationTripletField4;

        private string storedUnitCdField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string beginDate
        {
            get
            {
                return this.beginDateField2;
            }
            set
            {
                this.beginDateField2 = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int dataPrecision
        {
            get
            {
                return this.dataPrecisionField;
            }
            set
            {
                this.dataPrecisionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public virtual bool dataPrecisionSpecified
        {
            get
            {
                return this.dataPrecisionSpecifiedField;
            }
            set
            {
                this.dataPrecisionSpecifiedField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public dataSource dataSource
        {
            get
            {
                return this.dataSourceField1;
            }
            set
            {
                this.dataSourceField1 = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public virtual bool dataSourceSpecified
        {
            get
            {
                return this.dataSourceSpecifiedField;
            }
            set
            {
                this.dataSourceSpecifiedField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public duration duration
        {
            get
            {
                return this.durationField2;
            }
            set
            {
                this.durationField2 = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public virtual bool durationSpecified
        {
            get
            {
                return this.durationSpecifiedField1;
            }
            set
            {
                this.durationSpecifiedField1 = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string elementCd
        {
            get
            {
                return this.elementCdField6;
            }
            set
            {
                this.elementCdField6 = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string endDate
        {
            get
            {
                return this.endDateField2;
            }
            set
            {
                this.endDateField2 = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public heightDepth heightDepth
        {
            get
            {
                return this.heightDepthField2;
            }
            set
            {
                this.heightDepthField2 = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int ordinal
        {
            get
            {
                return this.ordinalField1;
            }
            set
            {
                this.ordinalField1 = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string originalUnitCd
        {
            get
            {
                return this.originalUnitCdField;
            }
            set
            {
                this.originalUnitCdField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string stationTriplet
        {
            get
            {
                return this.stationTripletField4;
            }
            set
            {
                this.stationTripletField4 = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string storedUnitCd
        {
            get
            {
                return this.storedUnitCdField;
            }
            set
            {
                this.storedUnitCdField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.wcc.nrcs.usda.gov/ns/awdbWebService")]
    public enum dataSource
    {

        /// <remarks/>
        OBSERVED,

        /// <remarks/>
        DERIVED,

        /// <remarks/>
        INTERPRETED,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.wcc.nrcs.usda.gov/ns/awdbWebService")]
    public partial class monthAndDay
    {

        private int dayField;

        private int monthField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int day
        {
            get
            {
                return this.dayField;
            }
            set
            {
                this.dayField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int month
        {
            get
            {
                return this.monthField;
            }
            set
            {
                this.monthField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.wcc.nrcs.usda.gov/ns/awdbWebService")]
    public partial class stationMetaData
    {

        private string actonIdField;

        private string beginDateField3;

        private string countyNameField;

        private decimal elevationField;

        private bool elevationSpecifiedField;

        private string endDateField3;

        private string fipsCountryCdField;

        private string fipsCountyCdField;

        private string fipsStateNumberField;

        private string hucField;

        private string hudField;

        private decimal latitudeField;

        private bool latitudeSpecifiedField;

        private decimal longitudeField;

        private bool longitudeSpecifiedField;

        private string nameField1;

        private string shefIdField;

        private decimal stationDataTimeZoneField;

        private bool stationDataTimeZoneSpecifiedField;

        private decimal stationTimeZoneField;

        private bool stationTimeZoneSpecifiedField;

        private string stationTripletField7;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string actonId
        {
            get
            {
                return this.actonIdField;
            }
            set
            {
                this.actonIdField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string beginDate
        {
            get
            {
                return this.beginDateField3;
            }
            set
            {
                this.beginDateField3 = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string countyName
        {
            get
            {
                return this.countyNameField;
            }
            set
            {
                this.countyNameField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public decimal elevation
        {
            get
            {
                return this.elevationField;
            }
            set
            {
                this.elevationField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public virtual bool elevationSpecified
        {
            get
            {
                return this.elevationSpecifiedField;
            }
            set
            {
                this.elevationSpecifiedField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string endDate
        {
            get
            {
                return this.endDateField3;
            }
            set
            {
                this.endDateField3 = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string fipsCountryCd
        {
            get
            {
                return this.fipsCountryCdField;
            }
            set
            {
                this.fipsCountryCdField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string fipsCountyCd
        {
            get
            {
                return this.fipsCountyCdField;
            }
            set
            {
                this.fipsCountyCdField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string fipsStateNumber
        {
            get
            {
                return this.fipsStateNumberField;
            }
            set
            {
                this.fipsStateNumberField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string huc
        {
            get
            {
                return this.hucField;
            }
            set
            {
                this.hucField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string hud
        {
            get
            {
                return this.hudField;
            }
            set
            {
                this.hudField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public decimal latitude
        {
            get
            {
                return this.latitudeField;
            }
            set
            {
                this.latitudeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public virtual bool latitudeSpecified
        {
            get
            {
                return this.latitudeSpecifiedField;
            }
            set
            {
                this.latitudeSpecifiedField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public decimal longitude
        {
            get
            {
                return this.longitudeField;
            }
            set
            {
                this.longitudeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public virtual bool longitudeSpecified
        {
            get
            {
                return this.longitudeSpecifiedField;
            }
            set
            {
                this.longitudeSpecifiedField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name
        {
            get
            {
                return this.nameField1;
            }
            set
            {
                this.nameField1 = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string shefId
        {
            get
            {
                return this.shefIdField;
            }
            set
            {
                this.shefIdField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public decimal stationDataTimeZone
        {
            get
            {
                return this.stationDataTimeZoneField;
            }
            set
            {
                this.stationDataTimeZoneField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public virtual bool stationDataTimeZoneSpecified
        {
            get
            {
                return this.stationDataTimeZoneSpecifiedField;
            }
            set
            {
                this.stationDataTimeZoneSpecifiedField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public decimal stationTimeZone
        {
            get
            {
                return this.stationTimeZoneField;
            }
            set
            {
                this.stationTimeZoneField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public virtual bool stationTimeZoneSpecified
        {
            get
            {
                return this.stationTimeZoneSpecifiedField;
            }
            set
            {
                this.stationTimeZoneSpecifiedField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string stationTriplet
        {
            get
            {
                return this.stationTripletField7;
            }
            set
            {
                this.stationTripletField7 = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.wcc.nrcs.usda.gov/ns/awdbWebService")]
    public partial class forecastPoint
    {

        private System.Nullable<int>[] exceedenceProbabilitiesField1;

        private string nameField2;

        private string responsibleForecasterField;

        private string stationTripletField8;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("exceedenceProbabilities", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true, DataType = "int")]
        public System.Nullable<int>[] exceedenceProbabilities
        {
            get
            {
                return this.exceedenceProbabilitiesField1;
            }
            set
            {
                this.exceedenceProbabilitiesField1 = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name
        {
            get
            {
                return this.nameField2;
            }
            set
            {
                this.nameField2 = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string responsibleForecaster
        {
            get
            {
                return this.responsibleForecasterField;
            }
            set
            {
                this.responsibleForecasterField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string stationTriplet
        {
            get
            {
                return this.stationTripletField8;
            }
            set
            {
                this.stationTripletField8 = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.wcc.nrcs.usda.gov/ns/awdbWebService")]
    public partial class stationDataAssuredFlags
    {

        private string[] assuredFlagsField;

        private string stationTripletField10;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("assuredFlags", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string[] assuredFlags
        {
            get
            {
                return this.assuredFlagsField;
            }
            set
            {
                this.assuredFlagsField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string stationTriplet
        {
            get
            {
                return this.stationTripletField10;
            }
            set
            {
                this.stationTripletField10 = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.wcc.nrcs.usda.gov/ns/awdbWebService")]
    public partial class forecastPeriodCentralTendency : forecastPeriodAverage
    {

        private centralTendencyType centralTendencyTypeField1;

        private bool centralTendencyTypeSpecifiedField1;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public centralTendencyType centralTendencyType
        {
            get
            {
                return this.centralTendencyTypeField1;
            }
            set
            {
                this.centralTendencyTypeField1 = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public virtual bool centralTendencyTypeSpecified
        {
            get
            {
                return this.centralTendencyTypeSpecifiedField1;
            }
            set
            {
                this.centralTendencyTypeSpecifiedField1 = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.wcc.nrcs.usda.gov/ns/awdbWebService")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(forecastPeriodCentralTendency))]
    public partial class forecastPeriodAverage
    {

        private string flagField1;

        private string forecastPeriodField4;

        private string stationTripletField11;

        private decimal valueField2;

        private bool valueSpecifiedField2;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string flag
        {
            get
            {
                return this.flagField1;
            }
            set
            {
                this.flagField1 = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string forecastPeriod
        {
            get
            {
                return this.forecastPeriodField4;
            }
            set
            {
                this.forecastPeriodField4 = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string stationTriplet
        {
            get
            {
                return this.stationTripletField11;
            }
            set
            {
                this.stationTripletField11 = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public decimal value
        {
            get
            {
                return this.valueField2;
            }
            set
            {
                this.valueField2 = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public virtual bool valueSpecified
        {
            get
            {
                return this.valueSpecifiedField2;
            }
            set
            {
                this.valueSpecifiedField2 = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.wcc.nrcs.usda.gov/ns/awdbWebService")]
    public partial class element
    {

        private string elementCdField9;

        private string nameField3;

        private string storedUnitCdField1;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string elementCd
        {
            get
            {
                return this.elementCdField9;
            }
            set
            {
                this.elementCdField9 = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name
        {
            get
            {
                return this.nameField3;
            }
            set
            {
                this.nameField3 = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string storedUnitCd
        {
            get
            {
                return this.storedUnitCdField1;
            }
            set
            {
                this.storedUnitCdField1 = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.wcc.nrcs.usda.gov/ns/awdbWebService")]
    public partial class configuration
    {

        private string analysisTypeField;

        private int calibrationEndYearField;

        private int calibrationStartYearField;

        private string commentField1;

        private int componentsToRetainField;

        private string creationDateField;

        private bool dailyForecastField;

        private decimal dailyForecastThresholdField;

        private bool dailyForecastThresholdSpecifiedField;

        private bool dailyForecastThresholdRelativeField;

        private bool dataForcedSeriallyCompleteField;

        private int degreesOfFreedomField;

        private string forecastConditionField1;

        private string forecastTypeField1;

        private string forecasterField;

        private decimal functionArgumentField1;

        private bool functionArgumentSpecifiedField1;

        private string functionCdField;

        private string helperDataSourceField;

        private string helperElementCdField;

        private int helperEndDayField;

        private int helperEndMonthField;

        private string helperEndYearFlagField;

        private int helperMixedPastEndDayField;

        private int helperMixedPastEndMonthField;

        private string helperMixedPastEndYearFlagField;

        private int helperMixedPastStartDayField;

        private int helperMixedPastStartMonthField;

        private string helperMixedPastStartYearFlagField;

        private bool helperPredictorUsedField;

        private int helperStartDayField;

        private int helperStartMonthField;

        private string helperStartYearFlagField;

        private string helperStationTripletField;

        private bool helperUsedInOverlappingYearsField;

        private bool helperVarianceMatchedToObservedField;

        private bool jackKnifingUsedField;

        private int keyField1;

        private decimal minimumR2ForPredictorField;

        private bool minimumR2ForPredictorSpecifiedField;

        private int minimumYearsForPredictorField;

        private int mixedPastEndDayField;

        private int mixedPastEndMonthField;

        private string mixedPastEndYearFlagField;

        private int mixedPastStartDayField;

        private int mixedPastStartMonthField;

        private string mixedPastStartYearFlagField;

        private bool mixedPastUsedField;

        private string nameField4;

        private int numYearsUsedField;

        private bool optimalWeightingUsedField;

        private decimal overrideAverageField;

        private bool overrideAverageSpecifiedField;

        private decimal overrideStderrField;

        private bool overrideStderrSpecifiedField;

        private decimal pastFlowRealtimeField;

        private bool pastFlowRealtimeSpecifiedField;

        private predictorGroup[] predictorGroupsField;

        private predictor[] predictorsField;

        private decimal preprocessingConstantField;

        private bool preprocessingConstantSpecifiedField;

        private decimal preprocessingMultiplierField;

        private bool preprocessingMultiplierSpecifiedField;

        private string publicationCdField;

        private decimal tTestLimitField;

        private bool tTestLimitSpecifiedField;

        private string targetDataSourceField;

        private string targetElementCdField;

        private int targetEndDayField;

        private int targetEndMonthField;

        private string targetEndYearFlagField;

        private int targetStartDayField;

        private int targetStartMonthField;

        private string targetStartYearFlagField;

        private string targetStationNameField;

        private string targetStationTripletField;

        private bool transformErrorsOnlyField1;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string analysisType
        {
            get
            {
                return this.analysisTypeField;
            }
            set
            {
                this.analysisTypeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int calibrationEndYear
        {
            get
            {
                return this.calibrationEndYearField;
            }
            set
            {
                this.calibrationEndYearField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int calibrationStartYear
        {
            get
            {
                return this.calibrationStartYearField;
            }
            set
            {
                this.calibrationStartYearField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string comment
        {
            get
            {
                return this.commentField1;
            }
            set
            {
                this.commentField1 = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int componentsToRetain
        {
            get
            {
                return this.componentsToRetainField;
            }
            set
            {
                this.componentsToRetainField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string creationDate
        {
            get
            {
                return this.creationDateField;
            }
            set
            {
                this.creationDateField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool dailyForecast
        {
            get
            {
                return this.dailyForecastField;
            }
            set
            {
                this.dailyForecastField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public decimal dailyForecastThreshold
        {
            get
            {
                return this.dailyForecastThresholdField;
            }
            set
            {
                this.dailyForecastThresholdField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public virtual bool dailyForecastThresholdSpecified
        {
            get
            {
                return this.dailyForecastThresholdSpecifiedField;
            }
            set
            {
                this.dailyForecastThresholdSpecifiedField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool dailyForecastThresholdRelative
        {
            get
            {
                return this.dailyForecastThresholdRelativeField;
            }
            set
            {
                this.dailyForecastThresholdRelativeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool dataForcedSeriallyComplete
        {
            get
            {
                return this.dataForcedSeriallyCompleteField;
            }
            set
            {
                this.dataForcedSeriallyCompleteField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int degreesOfFreedom
        {
            get
            {
                return this.degreesOfFreedomField;
            }
            set
            {
                this.degreesOfFreedomField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string forecastCondition
        {
            get
            {
                return this.forecastConditionField1;
            }
            set
            {
                this.forecastConditionField1 = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string forecastType
        {
            get
            {
                return this.forecastTypeField1;
            }
            set
            {
                this.forecastTypeField1 = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string forecaster
        {
            get
            {
                return this.forecasterField;
            }
            set
            {
                this.forecasterField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public decimal functionArgument
        {
            get
            {
                return this.functionArgumentField1;
            }
            set
            {
                this.functionArgumentField1 = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public virtual bool functionArgumentSpecified
        {
            get
            {
                return this.functionArgumentSpecifiedField1;
            }
            set
            {
                this.functionArgumentSpecifiedField1 = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string functionCd
        {
            get
            {
                return this.functionCdField;
            }
            set
            {
                this.functionCdField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string helperDataSource
        {
            get
            {
                return this.helperDataSourceField;
            }
            set
            {
                this.helperDataSourceField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string helperElementCd
        {
            get
            {
                return this.helperElementCdField;
            }
            set
            {
                this.helperElementCdField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int helperEndDay
        {
            get
            {
                return this.helperEndDayField;
            }
            set
            {
                this.helperEndDayField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int helperEndMonth
        {
            get
            {
                return this.helperEndMonthField;
            }
            set
            {
                this.helperEndMonthField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string helperEndYearFlag
        {
            get
            {
                return this.helperEndYearFlagField;
            }
            set
            {
                this.helperEndYearFlagField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int helperMixedPastEndDay
        {
            get
            {
                return this.helperMixedPastEndDayField;
            }
            set
            {
                this.helperMixedPastEndDayField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int helperMixedPastEndMonth
        {
            get
            {
                return this.helperMixedPastEndMonthField;
            }
            set
            {
                this.helperMixedPastEndMonthField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string helperMixedPastEndYearFlag
        {
            get
            {
                return this.helperMixedPastEndYearFlagField;
            }
            set
            {
                this.helperMixedPastEndYearFlagField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int helperMixedPastStartDay
        {
            get
            {
                return this.helperMixedPastStartDayField;
            }
            set
            {
                this.helperMixedPastStartDayField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int helperMixedPastStartMonth
        {
            get
            {
                return this.helperMixedPastStartMonthField;
            }
            set
            {
                this.helperMixedPastStartMonthField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string helperMixedPastStartYearFlag
        {
            get
            {
                return this.helperMixedPastStartYearFlagField;
            }
            set
            {
                this.helperMixedPastStartYearFlagField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool helperPredictorUsed
        {
            get
            {
                return this.helperPredictorUsedField;
            }
            set
            {
                this.helperPredictorUsedField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int helperStartDay
        {
            get
            {
                return this.helperStartDayField;
            }
            set
            {
                this.helperStartDayField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int helperStartMonth
        {
            get
            {
                return this.helperStartMonthField;
            }
            set
            {
                this.helperStartMonthField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string helperStartYearFlag
        {
            get
            {
                return this.helperStartYearFlagField;
            }
            set
            {
                this.helperStartYearFlagField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string helperStationTriplet
        {
            get
            {
                return this.helperStationTripletField;
            }
            set
            {
                this.helperStationTripletField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool helperUsedInOverlappingYears
        {
            get
            {
                return this.helperUsedInOverlappingYearsField;
            }
            set
            {
                this.helperUsedInOverlappingYearsField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool helperVarianceMatchedToObserved
        {
            get
            {
                return this.helperVarianceMatchedToObservedField;
            }
            set
            {
                this.helperVarianceMatchedToObservedField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool jackKnifingUsed
        {
            get
            {
                return this.jackKnifingUsedField;
            }
            set
            {
                this.jackKnifingUsedField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int key
        {
            get
            {
                return this.keyField1;
            }
            set
            {
                this.keyField1 = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public decimal minimumR2ForPredictor
        {
            get
            {
                return this.minimumR2ForPredictorField;
            }
            set
            {
                this.minimumR2ForPredictorField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public virtual bool minimumR2ForPredictorSpecified
        {
            get
            {
                return this.minimumR2ForPredictorSpecifiedField;
            }
            set
            {
                this.minimumR2ForPredictorSpecifiedField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int minimumYearsForPredictor
        {
            get
            {
                return this.minimumYearsForPredictorField;
            }
            set
            {
                this.minimumYearsForPredictorField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int mixedPastEndDay
        {
            get
            {
                return this.mixedPastEndDayField;
            }
            set
            {
                this.mixedPastEndDayField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int mixedPastEndMonth
        {
            get
            {
                return this.mixedPastEndMonthField;
            }
            set
            {
                this.mixedPastEndMonthField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string mixedPastEndYearFlag
        {
            get
            {
                return this.mixedPastEndYearFlagField;
            }
            set
            {
                this.mixedPastEndYearFlagField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int mixedPastStartDay
        {
            get
            {
                return this.mixedPastStartDayField;
            }
            set
            {
                this.mixedPastStartDayField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int mixedPastStartMonth
        {
            get
            {
                return this.mixedPastStartMonthField;
            }
            set
            {
                this.mixedPastStartMonthField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string mixedPastStartYearFlag
        {
            get
            {
                return this.mixedPastStartYearFlagField;
            }
            set
            {
                this.mixedPastStartYearFlagField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool mixedPastUsed
        {
            get
            {
                return this.mixedPastUsedField;
            }
            set
            {
                this.mixedPastUsedField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name
        {
            get
            {
                return this.nameField4;
            }
            set
            {
                this.nameField4 = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int numYearsUsed
        {
            get
            {
                return this.numYearsUsedField;
            }
            set
            {
                this.numYearsUsedField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool optimalWeightingUsed
        {
            get
            {
                return this.optimalWeightingUsedField;
            }
            set
            {
                this.optimalWeightingUsedField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public decimal overrideAverage
        {
            get
            {
                return this.overrideAverageField;
            }
            set
            {
                this.overrideAverageField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public virtual bool overrideAverageSpecified
        {
            get
            {
                return this.overrideAverageSpecifiedField;
            }
            set
            {
                this.overrideAverageSpecifiedField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public decimal overrideStderr
        {
            get
            {
                return this.overrideStderrField;
            }
            set
            {
                this.overrideStderrField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public virtual bool overrideStderrSpecified
        {
            get
            {
                return this.overrideStderrSpecifiedField;
            }
            set
            {
                this.overrideStderrSpecifiedField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public decimal pastFlowRealtime
        {
            get
            {
                return this.pastFlowRealtimeField;
            }
            set
            {
                this.pastFlowRealtimeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public virtual bool pastFlowRealtimeSpecified
        {
            get
            {
                return this.pastFlowRealtimeSpecifiedField;
            }
            set
            {
                this.pastFlowRealtimeSpecifiedField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("predictorGroups", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public predictorGroup[] predictorGroups
        {
            get
            {
                return this.predictorGroupsField;
            }
            set
            {
                this.predictorGroupsField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("predictors", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public predictor[] predictors
        {
            get
            {
                return this.predictorsField;
            }
            set
            {
                this.predictorsField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public decimal preprocessingConstant
        {
            get
            {
                return this.preprocessingConstantField;
            }
            set
            {
                this.preprocessingConstantField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public virtual bool preprocessingConstantSpecified
        {
            get
            {
                return this.preprocessingConstantSpecifiedField;
            }
            set
            {
                this.preprocessingConstantSpecifiedField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public decimal preprocessingMultiplier
        {
            get
            {
                return this.preprocessingMultiplierField;
            }
            set
            {
                this.preprocessingMultiplierField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public virtual bool preprocessingMultiplierSpecified
        {
            get
            {
                return this.preprocessingMultiplierSpecifiedField;
            }
            set
            {
                this.preprocessingMultiplierSpecifiedField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string publicationCd
        {
            get
            {
                return this.publicationCdField;
            }
            set
            {
                this.publicationCdField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public decimal TTestLimit
        {
            get
            {
                return this.tTestLimitField;
            }
            set
            {
                this.tTestLimitField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public virtual bool TTestLimitSpecified
        {
            get
            {
                return this.tTestLimitSpecifiedField;
            }
            set
            {
                this.tTestLimitSpecifiedField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string targetDataSource
        {
            get
            {
                return this.targetDataSourceField;
            }
            set
            {
                this.targetDataSourceField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string targetElementCd
        {
            get
            {
                return this.targetElementCdField;
            }
            set
            {
                this.targetElementCdField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int targetEndDay
        {
            get
            {
                return this.targetEndDayField;
            }
            set
            {
                this.targetEndDayField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int targetEndMonth
        {
            get
            {
                return this.targetEndMonthField;
            }
            set
            {
                this.targetEndMonthField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string targetEndYearFlag
        {
            get
            {
                return this.targetEndYearFlagField;
            }
            set
            {
                this.targetEndYearFlagField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int targetStartDay
        {
            get
            {
                return this.targetStartDayField;
            }
            set
            {
                this.targetStartDayField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int targetStartMonth
        {
            get
            {
                return this.targetStartMonthField;
            }
            set
            {
                this.targetStartMonthField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string targetStartYearFlag
        {
            get
            {
                return this.targetStartYearFlagField;
            }
            set
            {
                this.targetStartYearFlagField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string targetStationName
        {
            get
            {
                return this.targetStationNameField;
            }
            set
            {
                this.targetStationNameField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string targetStationTriplet
        {
            get
            {
                return this.targetStationTripletField;
            }
            set
            {
                this.targetStationTripletField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool transformErrorsOnly
        {
            get
            {
                return this.transformErrorsOnlyField1;
            }
            set
            {
                this.transformErrorsOnlyField1 = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.wcc.nrcs.usda.gov/ns/awdbWebService")]
    public partial class predictorGroup
    {

        private string customStationListNameField;

        private string dataSourceCdField;

        private string elementCdField12;

        private bool globalMonthChangeAllowedField;

        private string groupNameField;

        private int groupNumberField;

        private bool groupNumberSpecifiedField;

        private bool negativeWeightAllowedField;

        private string networksField;

        private string statesField;

        private bool upstreamForecastField1;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string customStationListName
        {
            get
            {
                return this.customStationListNameField;
            }
            set
            {
                this.customStationListNameField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string dataSourceCd
        {
            get
            {
                return this.dataSourceCdField;
            }
            set
            {
                this.dataSourceCdField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string elementCd
        {
            get
            {
                return this.elementCdField12;
            }
            set
            {
                this.elementCdField12 = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool globalMonthChangeAllowed
        {
            get
            {
                return this.globalMonthChangeAllowedField;
            }
            set
            {
                this.globalMonthChangeAllowedField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string groupName
        {
            get
            {
                return this.groupNameField;
            }
            set
            {
                this.groupNameField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int groupNumber
        {
            get
            {
                return this.groupNumberField;
            }
            set
            {
                this.groupNumberField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public virtual bool groupNumberSpecified
        {
            get
            {
                return this.groupNumberSpecifiedField;
            }
            set
            {
                this.groupNumberSpecifiedField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool negativeWeightAllowed
        {
            get
            {
                return this.negativeWeightAllowedField;
            }
            set
            {
                this.negativeWeightAllowedField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string networks
        {
            get
            {
                return this.networksField;
            }
            set
            {
                this.networksField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string states
        {
            get
            {
                return this.statesField;
            }
            set
            {
                this.statesField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool upstreamForecast
        {
            get
            {
                return this.upstreamForecastField1;
            }
            set
            {
                this.upstreamForecastField1 = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.wcc.nrcs.usda.gov/ns/awdbWebService")]
    public partial class predictor
    {

        private int endDayField2;

        private int endMonthField2;

        private string endYearFlagField;

        private int groupNumberField1;

        private int predictorNumberField;

        private bool predictorUsedField;

        private int startDayField;

        private int startMonthField;

        private string startYearFlagField;

        private string stationTripletField13;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int endDay
        {
            get
            {
                return this.endDayField2;
            }
            set
            {
                this.endDayField2 = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int endMonth
        {
            get
            {
                return this.endMonthField2;
            }
            set
            {
                this.endMonthField2 = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string endYearFlag
        {
            get
            {
                return this.endYearFlagField;
            }
            set
            {
                this.endYearFlagField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int groupNumber
        {
            get
            {
                return this.groupNumberField1;
            }
            set
            {
                this.groupNumberField1 = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int predictorNumber
        {
            get
            {
                return this.predictorNumberField;
            }
            set
            {
                this.predictorNumberField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool predictorUsed
        {
            get
            {
                return this.predictorUsedField;
            }
            set
            {
                this.predictorUsedField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int startDay
        {
            get
            {
                return this.startDayField;
            }
            set
            {
                this.startDayField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int startMonth
        {
            get
            {
                return this.startMonthField;
            }
            set
            {
                this.startMonthField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string startYearFlag
        {
            get
            {
                return this.startYearFlagField;
            }
            set
            {
                this.startYearFlagField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string stationTriplet
        {
            get
            {
                return this.stationTripletField13;
            }
            set
            {
                this.stationTripletField13 = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.wcc.nrcs.usda.gov/ns/awdbWebService")]
    public partial class centralTendencyPeakData : averagesPeakData
    {

        private centralTendencyType centralTendencyTypeField3;

        private bool centralTendencyTypeSpecifiedField2;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public centralTendencyType centralTendencyType
        {
            get
            {
                return this.centralTendencyTypeField3;
            }
            set
            {
                this.centralTendencyTypeField3 = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public virtual bool centralTendencyTypeSpecified
        {
            get
            {
                return this.centralTendencyTypeSpecifiedField2;
            }
            set
            {
                this.centralTendencyTypeSpecifiedField2 = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.wcc.nrcs.usda.gov/ns/awdbWebService")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(centralTendencyPeakData))]
    public partial class averagesPeakData
    {

        private duration durationField3;

        private bool durationSpecifiedField2;

        private string flagField2;

        private int peakDayField;

        private int peakMonthField;

        private decimal valueField3;

        private bool valueSpecifiedField3;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public duration duration
        {
            get
            {
                return this.durationField3;
            }
            set
            {
                this.durationField3 = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public virtual bool durationSpecified
        {
            get
            {
                return this.durationSpecifiedField2;
            }
            set
            {
                this.durationSpecifiedField2 = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string flag
        {
            get
            {
                return this.flagField2;
            }
            set
            {
                this.flagField2 = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int peakDay
        {
            get
            {
                return this.peakDayField;
            }
            set
            {
                this.peakDayField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int peakMonth
        {
            get
            {
                return this.peakMonthField;
            }
            set
            {
                this.peakMonthField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public decimal value
        {
            get
            {
                return this.valueField3;
            }
            set
            {
                this.valueField3 = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public virtual bool valueSpecified
        {
            get
            {
                return this.valueSpecifiedField3;
            }
            set
            {
                this.valueSpecifiedField3 = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.wcc.nrcs.usda.gov/ns/awdbWebService")]
    public partial class reservoirMetadata
    {

        private decimal elevationAtCapacityField;

        private bool elevationAtCapacitySpecifiedField;

        private decimal reservoirCapacityField;

        private bool reservoirCapacitySpecifiedField;

        private string stationTripletField14;

        private decimal usableCapacityField;

        private bool usableCapacitySpecifiedField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public decimal elevationAtCapacity
        {
            get
            {
                return this.elevationAtCapacityField;
            }
            set
            {
                this.elevationAtCapacityField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public virtual bool elevationAtCapacitySpecified
        {
            get
            {
                return this.elevationAtCapacitySpecifiedField;
            }
            set
            {
                this.elevationAtCapacitySpecifiedField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public decimal reservoirCapacity
        {
            get
            {
                return this.reservoirCapacityField;
            }
            set
            {
                this.reservoirCapacityField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public virtual bool reservoirCapacitySpecified
        {
            get
            {
                return this.reservoirCapacitySpecifiedField;
            }
            set
            {
                this.reservoirCapacitySpecifiedField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string stationTriplet
        {
            get
            {
                return this.stationTripletField14;
            }
            set
            {
                this.stationTripletField14 = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public decimal usableCapacity
        {
            get
            {
                return this.usableCapacityField;
            }
            set
            {
                this.usableCapacityField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public virtual bool usableCapacitySpecified
        {
            get
            {
                return this.usableCapacitySpecifiedField;
            }
            set
            {
                this.usableCapacitySpecifiedField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.wcc.nrcs.usda.gov/ns/awdbWebService")]
    public partial class forecastFull
    {

        private string commentField2;

        private configuration configurationField;

        private string coordinatedForecastIssueDateField;

        private System.Nullable<decimal>[] coordinatedForecastProbabilitiesField;

        private System.Nullable<decimal>[] coordinatedForecastValuesField;

        private string elementCdField15;

        private forecastEquation equationField;

        private bool forecastFinalField;

        private string forecastPeriodCdField;

        private string forecastPeriodNameField;

        private string forecasterField2;

        private string hydrologistForecastIssueDateField;

        private System.Nullable<decimal>[] hydrologistForecastProbabilitiesField;

        private System.Nullable<decimal>[] hydrologistForecastValuesField;

        private string originalForecastIssueDateField;

        private System.Nullable<decimal>[] originalForecastProbabilitiesField;

        private System.Nullable<decimal>[] originalForecastValuesField;

        private string[] otherAgencyCdsField;

        private System.Nullable<decimal>[] otherAgencyForecastValuesField;

        private decimal periodAverageField1;

        private bool periodAverageSpecifiedField1;

        private string publicationDateField2;

        private string stationTripletField17;

        private string unitCdField5;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string comment
        {
            get
            {
                return this.commentField2;
            }
            set
            {
                this.commentField2 = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public configuration configuration
        {
            get
            {
                return this.configurationField;
            }
            set
            {
                this.configurationField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string coordinatedForecastIssueDate
        {
            get
            {
                return this.coordinatedForecastIssueDateField;
            }
            set
            {
                this.coordinatedForecastIssueDateField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("coordinatedForecastProbabilities", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true, DataType = "decimal")]
        public System.Nullable<decimal>[] coordinatedForecastProbabilities
        {
            get
            {
                return this.coordinatedForecastProbabilitiesField;
            }
            set
            {
                this.coordinatedForecastProbabilitiesField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("coordinatedForecastValues", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true, DataType = "decimal")]
        public System.Nullable<decimal>[] coordinatedForecastValues
        {
            get
            {
                return this.coordinatedForecastValuesField;
            }
            set
            {
                this.coordinatedForecastValuesField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string elementCd
        {
            get
            {
                return this.elementCdField15;
            }
            set
            {
                this.elementCdField15 = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public forecastEquation equation
        {
            get
            {
                return this.equationField;
            }
            set
            {
                this.equationField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool forecastFinal
        {
            get
            {
                return this.forecastFinalField;
            }
            set
            {
                this.forecastFinalField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string forecastPeriodCd
        {
            get
            {
                return this.forecastPeriodCdField;
            }
            set
            {
                this.forecastPeriodCdField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string forecastPeriodName
        {
            get
            {
                return this.forecastPeriodNameField;
            }
            set
            {
                this.forecastPeriodNameField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string forecaster
        {
            get
            {
                return this.forecasterField2;
            }
            set
            {
                this.forecasterField2 = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string hydrologistForecastIssueDate
        {
            get
            {
                return this.hydrologistForecastIssueDateField;
            }
            set
            {
                this.hydrologistForecastIssueDateField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("hydrologistForecastProbabilities", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true, DataType = "decimal")]
        public System.Nullable<decimal>[] hydrologistForecastProbabilities
        {
            get
            {
                return this.hydrologistForecastProbabilitiesField;
            }
            set
            {
                this.hydrologistForecastProbabilitiesField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("hydrologistForecastValues", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true, DataType = "decimal")]
        public System.Nullable<decimal>[] hydrologistForecastValues
        {
            get
            {
                return this.hydrologistForecastValuesField;
            }
            set
            {
                this.hydrologistForecastValuesField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string originalForecastIssueDate
        {
            get
            {
                return this.originalForecastIssueDateField;
            }
            set
            {
                this.originalForecastIssueDateField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("originalForecastProbabilities", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true, DataType = "decimal")]
        public System.Nullable<decimal>[] originalForecastProbabilities
        {
            get
            {
                return this.originalForecastProbabilitiesField;
            }
            set
            {
                this.originalForecastProbabilitiesField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("originalForecastValues", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true, DataType = "decimal")]
        public System.Nullable<decimal>[] originalForecastValues
        {
            get
            {
                return this.originalForecastValuesField;
            }
            set
            {
                this.originalForecastValuesField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("otherAgencyCds", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string[] otherAgencyCds
        {
            get
            {
                return this.otherAgencyCdsField;
            }
            set
            {
                this.otherAgencyCdsField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("otherAgencyForecastValues", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true, DataType = "decimal")]
        public System.Nullable<decimal>[] otherAgencyForecastValues
        {
            get
            {
                return this.otherAgencyForecastValuesField;
            }
            set
            {
                this.otherAgencyForecastValuesField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public decimal periodAverage
        {
            get
            {
                return this.periodAverageField1;
            }
            set
            {
                this.periodAverageField1 = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public virtual bool periodAverageSpecified
        {
            get
            {
                return this.periodAverageSpecifiedField1;
            }
            set
            {
                this.periodAverageSpecifiedField1 = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string publicationDate
        {
            get
            {
                return this.publicationDateField2;
            }
            set
            {
                this.publicationDateField2 = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string stationTriplet
        {
            get
            {
                return this.stationTripletField17;
            }
            set
            {
                this.stationTripletField17 = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string unitCd
        {
            get
            {
                return this.unitCdField5;
            }
            set
            {
                this.unitCdField5 = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.wcc.nrcs.usda.gov/ns/awdbWebService")]
    public enum instantaneousDataFilter
    {

        /// <remarks/>
        ALL,

        /// <remarks/>
        FIRST_OF_DAY,

        /// <remarks/>
        MIDNIGHT_ONLY,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.wcc.nrcs.usda.gov/ns/awdbWebService")]
    public enum unitSystem
    {

        /// <remarks/>
        ENGLISH,

        /// <remarks/>
        LAST_COLLECTED,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.wcc.nrcs.usda.gov/ns/awdbWebService")]
    public partial class instantaneousData
    {

        private string beginDateField5;

        private string endDateField5;

        private int stationIdField;

        private string unitCdField6;

        private instantaneousDataValue[] valuesField2;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string beginDate
        {
            get
            {
                return this.beginDateField5;
            }
            set
            {
                this.beginDateField5 = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string endDate
        {
            get
            {
                return this.endDateField5;
            }
            set
            {
                this.endDateField5 = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int stationId
        {
            get
            {
                return this.stationIdField;
            }
            set
            {
                this.stationIdField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string unitCd
        {
            get
            {
                return this.unitCdField6;
            }
            set
            {
                this.unitCdField6 = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("values", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public instantaneousDataValue[] values
        {
            get
            {
                return this.valuesField2;
            }
            set
            {
                this.valuesField2 = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.wcc.nrcs.usda.gov/ns/awdbWebService")]
    public partial class instantaneousDataValue
    {

        private string flagField3;

        private string timeField;

        private decimal valueField4;

        private bool valueSpecifiedField4;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string flag
        {
            get
            {
                return this.flagField3;
            }
            set
            {
                this.flagField3 = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string time
        {
            get
            {
                return this.timeField;
            }
            set
            {
                this.timeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public decimal value
        {
            get
            {
                return this.valueField4;
            }
            set
            {
                this.valueField4 = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public virtual bool valueSpecified
        {
            get
            {
                return this.valueSpecifiedField4;
            }
            set
            {
                this.valueSpecifiedField4 = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.wcc.nrcs.usda.gov/ns/awdbWebService")]
    public partial class data
    {

        private string beginDateField7;

        private duration durationField5;

        private bool durationSpecifiedField3;

        private string endDateField7;

        private string[] flagsField1;

        private System.Nullable<decimal>[] valuesField3;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string beginDate
        {
            get
            {
                return this.beginDateField7;
            }
            set
            {
                this.beginDateField7 = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public duration duration
        {
            get
            {
                return this.durationField5;
            }
            set
            {
                this.durationField5 = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public virtual bool durationSpecified
        {
            get
            {
                return this.durationSpecifiedField3;
            }
            set
            {
                this.durationSpecifiedField3 = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string endDate
        {
            get
            {
                return this.endDateField7;
            }
            set
            {
                this.endDateField7 = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("flags", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string[] flags
        {
            get
            {
                return this.flagsField1;
            }
            set
            {
                this.flagsField1 = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("values", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true, DataType = "decimal")]
        public System.Nullable<decimal>[] values
        {
            get
            {
                return this.valuesField3;
            }
            set
            {
                this.valuesField3 = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.wcc.nrcs.usda.gov/ns/awdbWebService")]
    public partial class forecastPeriod
    {

        private string descriptionField;

        private string forecastPeriod1Field;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description
        {
            get
            {
                return this.descriptionField;
            }
            set
            {
                this.descriptionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("forecastPeriod", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string forecastPeriod1
        {
            get
            {
                return this.forecastPeriod1Field;
            }
            set
            {
                this.forecastPeriod1Field = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.wcc.nrcs.usda.gov/ns/awdbWebService")]
    public partial class peakData
    {

        private int beginYearField;

        private duration durationField9;

        private bool durationSpecifiedField4;

        private int endYearField;

        private string[] flagsField2;

        private System.Nullable<int>[] peakDaysField;

        private System.Nullable<int>[] peakMonthsField;

        private System.Nullable<decimal>[] valuesField4;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int beginYear
        {
            get
            {
                return this.beginYearField;
            }
            set
            {
                this.beginYearField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public duration duration
        {
            get
            {
                return this.durationField9;
            }
            set
            {
                this.durationField9 = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public virtual bool durationSpecified
        {
            get
            {
                return this.durationSpecifiedField4;
            }
            set
            {
                this.durationSpecifiedField4 = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int endYear
        {
            get
            {
                return this.endYearField;
            }
            set
            {
                this.endYearField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("flags", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string[] flags
        {
            get
            {
                return this.flagsField2;
            }
            set
            {
                this.flagsField2 = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("peakDays", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true, DataType = "int")]
        public System.Nullable<int>[] peakDays
        {
            get
            {
                return this.peakDaysField;
            }
            set
            {
                this.peakDaysField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("peakMonths", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true, DataType = "int")]
        public System.Nullable<int>[] peakMonths
        {
            get
            {
                return this.peakMonthsField;
            }
            set
            {
                this.peakMonthsField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("values", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true, DataType = "decimal")]
        public System.Nullable<decimal>[] values
        {
            get
            {
                return this.valuesField4;
            }
            set
            {
                this.valuesField4 = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.wcc.nrcs.usda.gov/ns/awdbWebService")]
    public partial class unit
    {

        private string nameField5;

        private string unitCdField7;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name
        {
            get
            {
                return this.nameField5;
            }
            set
            {
                this.nameField5 = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string unitCd
        {
            get
            {
                return this.unitCdField7;
            }
            set
            {
                this.unitCdField7 = value;
            }
        }
    }

    public partial class getForecastsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getForecastsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public forecast[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((forecast[])(this.results[0]));
            }
        }
    }

    public delegate void getForecastsCompletedEventHandler(object sender, getForecastsCompletedEventArgs args);

    public partial class getForecastsByPubDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getForecastsByPubDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public forecast[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((forecast[])(this.results[0]));
            }
        }
    }

    public delegate void getForecastsByPubDateCompletedEventHandler(object sender, getForecastsByPubDateCompletedEventArgs args);

    public partial class getStationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getStationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public string[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }

    public delegate void getStationsCompletedEventHandler(object sender, getStationsCompletedEventArgs args);

    public partial class getAveragesDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getAveragesDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public averagesData[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((averagesData[])(this.results[0]));
            }
        }
    }

    public delegate void getAveragesDataCompletedEventHandler(object sender, getAveragesDataCompletedEventArgs args);

    public partial class getHourlyDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getHourlyDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public hourlyData[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((hourlyData[])(this.results[0]));
            }
        }
    }

    public delegate void getHourlyDataCompletedEventHandler(object sender, getHourlyDataCompletedEventArgs args);

    public partial class runDiagnosticsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal runDiagnosticsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public diagnostics Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((diagnostics)(this.results[0]));
            }
        }
    }

    public delegate void runDiagnosticsCompletedEventHandler(object sender, runDiagnosticsCompletedEventArgs args);

    public partial class getForecastEquationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getForecastEquationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public forecastEquation[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((forecastEquation[])(this.results[0]));
            }
        }
    }

    public delegate void getForecastEquationsCompletedEventHandler(object sender, getForecastEquationsCompletedEventArgs args);

    public partial class getUnitNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getUnitNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    public delegate void getUnitNameCompletedEventHandler(object sender, getUnitNameCompletedEventArgs args);

    public partial class getStationMetadataMultipleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getStationMetadataMultipleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public stationMetaData[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((stationMetaData[])(this.results[0]));
            }
        }
    }

    public delegate void getStationMetadataMultipleCompletedEventHandler(object sender, getStationMetadataMultipleCompletedEventArgs args);

    public partial class getForecastPointCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getForecastPointCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public forecastPoint Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((forecastPoint)(this.results[0]));
            }
        }
    }

    public delegate void getForecastPointCompletedEventHandler(object sender, getForecastPointCompletedEventArgs args);

    public partial class getStationDataAssuredFlagsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getStationDataAssuredFlagsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public stationDataAssuredFlags[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((stationDataAssuredFlags[])(this.results[0]));
            }
        }
    }

    public delegate void getStationDataAssuredFlagsCompletedEventHandler(object sender, getStationDataAssuredFlagsCompletedEventArgs args);

    public partial class getForecastEquationsMultipleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getForecastEquationsMultipleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public forecastEquation[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((forecastEquation[])(this.results[0]));
            }
        }
    }

    public delegate void getForecastEquationsMultipleCompletedEventHandler(object sender, getForecastEquationsMultipleCompletedEventArgs args);

    public partial class getForecastPeriodCentralTendencyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getForecastPeriodCentralTendencyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public forecastPeriodCentralTendency[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((forecastPeriodCentralTendency[])(this.results[0]));
            }
        }
    }

    public delegate void getForecastPeriodCentralTendencyCompletedEventHandler(object sender, getForecastPeriodCentralTendencyCompletedEventArgs args);

    public partial class getElementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getElementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public element Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((element)(this.results[0]));
            }
        }
    }

    public delegate void getElementCompletedEventHandler(object sender, getElementCompletedEventArgs args);

    public partial class getForecastValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getForecastValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public decimal Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
    }

    public delegate void getForecastValueCompletedEventHandler(object sender, getForecastValueCompletedEventArgs args);

    public partial class getForecastConfigurationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getForecastConfigurationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public configuration[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((configuration[])(this.results[0]));
            }
        }
    }

    public delegate void getForecastConfigurationsCompletedEventHandler(object sender, getForecastConfigurationsCompletedEventArgs args);

    public partial class getCentralTendencyPeakDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getCentralTendencyPeakDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public centralTendencyPeakData[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((centralTendencyPeakData[])(this.results[0]));
            }
        }
    }

    public delegate void getCentralTendencyPeakDataCompletedEventHandler(object sender, getCentralTendencyPeakDataCompletedEventArgs args);

    public partial class getReservoirMetadataMultipleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getReservoirMetadataMultipleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public reservoirMetadata[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((reservoirMetadata[])(this.results[0]));
            }
        }
    }

    public delegate void getReservoirMetadataMultipleCompletedEventHandler(object sender, getReservoirMetadataMultipleCompletedEventArgs args);

    public partial class getForecastCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getForecastCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public forecast Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((forecast)(this.results[0]));
            }
        }
    }

    public delegate void getForecastCompletedEventHandler(object sender, getForecastCompletedEventArgs args);

    public partial class getReservoirMetadataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getReservoirMetadataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public reservoirMetadata Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((reservoirMetadata)(this.results[0]));
            }
        }
    }

    public delegate void getReservoirMetadataCompletedEventHandler(object sender, getReservoirMetadataCompletedEventArgs args);

    public partial class getAllForecastsForStationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getAllForecastsForStationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public forecastFull[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((forecastFull[])(this.results[0]));
            }
        }
    }

    public delegate void getAllForecastsForStationCompletedEventHandler(object sender, getAllForecastsForStationCompletedEventArgs args);

    public partial class getForecastPeriodAveragesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getForecastPeriodAveragesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public forecastPeriodAverage[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((forecastPeriodAverage[])(this.results[0]));
            }
        }
    }

    public delegate void getForecastPeriodAveragesCompletedEventHandler(object sender, getForecastPeriodAveragesCompletedEventArgs args);

    public partial class getStationElementsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getStationElementsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public stationElement[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((stationElement[])(this.results[0]));
            }
        }
    }

    public delegate void getStationElementsCompletedEventHandler(object sender, getStationElementsCompletedEventArgs args);

    public partial class getInstantaneousDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getInstantaneousDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public instantaneousData[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((instantaneousData[])(this.results[0]));
            }
        }
    }

    public delegate void getInstantaneousDataCompletedEventHandler(object sender, getInstantaneousDataCompletedEventArgs args);

    public partial class getDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public data[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((data[])(this.results[0]));
            }
        }
    }

    public delegate void getDataCompletedEventHandler(object sender, getDataCompletedEventArgs args);

    public partial class getCentralTendencyDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getCentralTendencyDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public centralTendencyData[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((centralTendencyData[])(this.results[0]));
            }
        }
    }

    public delegate void getCentralTendencyDataCompletedEventHandler(object sender, getCentralTendencyDataCompletedEventArgs args);

    public partial class getForecastPeriodsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getForecastPeriodsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public forecastPeriod[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((forecastPeriod[])(this.results[0]));
            }
        }
    }

    public delegate void getForecastPeriodsCompletedEventHandler(object sender, getForecastPeriodsCompletedEventArgs args);

    public partial class getHeightDepthsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getHeightDepthsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public heightDepth[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((heightDepth[])(this.results[0]));
            }
        }
    }

    public delegate void getHeightDepthsCompletedEventHandler(object sender, getHeightDepthsCompletedEventArgs args);

    public partial class getForecastPointsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getForecastPointsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public forecastPoint[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((forecastPoint[])(this.results[0]));
            }
        }
    }

    public delegate void getForecastPointsCompletedEventHandler(object sender, getForecastPointsCompletedEventArgs args);

    public partial class getStationMetadataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getStationMetadataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public stationMetaData Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((stationMetaData)(this.results[0]));
            }
        }
    }

    public delegate void getStationMetadataCompletedEventHandler(object sender, getStationMetadataCompletedEventArgs args);

    public partial class areYouThereCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal areYouThereCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    public delegate void areYouThereCompletedEventHandler(object sender, areYouThereCompletedEventArgs args);

    public partial class getAveragesPeakCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getAveragesPeakCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public averagesPeakData[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((averagesPeakData[])(this.results[0]));
            }
        }
    }

    public delegate void getAveragesPeakCompletedEventHandler(object sender, getAveragesPeakCompletedEventArgs args);

    public partial class getPeakDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getPeakDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public peakData[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((peakData[])(this.results[0]));
            }
        }
    }

    public delegate void getPeakDataCompletedEventHandler(object sender, getPeakDataCompletedEventArgs args);

    public partial class getUnitsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getUnitsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public unit[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((unit[])(this.results[0]));
            }
        }
    }

    public delegate void getUnitsCompletedEventHandler(object sender, getUnitsCompletedEventArgs args);

    public partial class getElementsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getElementsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public element[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((element[])(this.results[0]));
            }
        }
    }

    public delegate void getElementsCompletedEventHandler(object sender, getElementsCompletedEventArgs args);


}