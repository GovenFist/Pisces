; 2017-Jan  Hydromet alert extensions.conf
; Karl Tarbet 
; this asterisk configuration file is stored in a linux
; asterisk server  /etc/asterisk/extensions.conf
;
; this dialplan is entered using a call file such as the following:
;
;Channel: SIP/pn/5272
;Context: hydromet
;Extension: main
;Priority: 1
;CallerID: Hydromet <(208) 555-1111>
;Set: siteid=beu
;Set: parameter=fb
;Set: value=5432.1
;Set: id=3
;Set: phone=5272
;
;
[globals]
SIP=SIP/pn ; defined in /etc/asterisk/sip.conf

[hydromet]
exten => main,1,NoOp(begin hydromet alert call)
   same => n,Gosub(log,start,1( ${phone} has answered))
   same => n,DumpChan()
   same => n,Gosub(update_status,start,1(unconfirmed))
   same => n,Background(beep)
   ; press 1 to accept this call from Hydromet
   same => n,Read(ackDigit,hydromet/incoming_call&hydromet/${siteid}_site&hydromet/press1,1,,2,5)
   same => n,GotoIf($["${ackDigit}" = "1"]?ackalert:unconfirmed)
   
   same => n(ackalert),NoOp() ; user has accepted the call by pressing 1
   same => n,Gosub(log,start,1( ${phone} has pressed 1 to accept the call))
   same => n,Playback(hydromet/boise_hydromet)
   same => n,Playback(hydromet/alarm_condition)
   same => n,Gosub(log,start,1(there is an alarm condition at site ${siteid}/${parameter}=${value} ))
   same => n,Playback(hydromet/${siteid}_site)
   same => n,Background(hydromet/hydromet_cbtt); the hydromet code for this site is
   same => n,SayAlpha(${siteid})
   same => n,Playback(hydromet/hydromet_parameter) ; the parameter is
   same => n,Playback(hydromet/${parameter}_parameter) ; Forebay
   same => n,Playback(hydromet/hydromet_pcode) ; the hydromet code for this parameter
   same => n,SayAlpha(${parameter})
   same => n,Background(hydromet/alarm_value) ; the alarm value is
   same => n,SayAlpha(${value})
   same => n,Background(hydromet/ack_responibility)
   same => n,Read(ackDigit,hydromet/press1or5,1,,2,5) ;press 1 to accept responsibility, to repeat press 5
   same => n,GotoIf($["${ackDigit}" = "5"]?ackalert)
   same => n,GotoIf($["${ackDigit}" = "1"]?confirmed)
   same => n,Goto(unconfirmed)

; --- confirmed ---
   same => n(confirmed),NoOp()
   same => n,Gosub(update_status,start,1(confirmed))
   same => n,Gosub(log,start,1(confirmed by ${phone} ))
   same => n,Playback(auth-thankyou)
   same => n,Playback(vm-goodbye)
   same => n,Hangup()

; --- unconfirmed ---
   same => n(unconfirmed),NoOp()
   same => n,Gosub(update_status,start,1(unconfirmed))

exten => i,1,Goto(hydromet,main,1)

exten => e,1,NoOp(error )

exten => h,1,NoOp(hangup extension)


; log info to alarm_log table
[log]
 exten => start,1,NoOp(log)
  same => n,Set(sql=insert into alarm_log values('${STRFTIME(${EPOCH},,%Y-%m-%d %H:%M:%S)}','${SQL_ESC(${ARG1
})}',${id}))
  same => n,NoOp(${sql})
  same => n,Set(DB_CMD()="${sql}")
  same => n,Verbose(1,ODBCROWS is ${ODBCROWS})
  same => n,Return()

; update the alarm_phone_queue
;
; update_queue(status,confirmed_by)
; example update_queue(confirmed,5272)
[update_queue]
 exten => start,1,NoOp(log)
  same => n,Set(sql="update alarm_phone_queue set status = '${SQL_ESC(${ARG1})}' where id = ${id}")
  same => n,NoOp(${sql})
  same => n,Set(DB_CMD()="${sql}")
  same => n,Verbose(1,ODBCROWS is ${ODBCROWS})
 ; -- confirmed by
  same => n,Set(sql="update alarm_phone_queue set confirmed_by = '${SQL_ESC(${ARG2})}' where id = ${id}")
  same => n,NoOp(${sql})
  same => n,Set(DB_CMD()="${sql}")
  same => n,Verbose(1,ODBCROWS is ${ODBCROWS})
;
; -- update status_time
  same => n,Set(sql="update alarm_phone_queue set status_time = '${STRFTIME(${EPOCH},,%Y-%m-%d %H:%M:%S)}' where id = ${id}")
  same => n,NoOp(${sql})
  same => n,Set(DB_CMD()="${sql}")
  same => n,Verbose(1,ODBCROWS is ${ODBCROWS})

  same => n,Return()





