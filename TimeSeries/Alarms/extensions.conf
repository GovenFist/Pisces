; 2016-10-4  Hydromet alert extensions.conf
; this asterisk configuration file is stored in a linux
; asterisk server  /etc/asterisk/extensions.conf
;
; asterisk -x "channel originate local/main@hydromet extension"


[globals]
SIP=SIP/pn ; defined in /etc/asterisk/sip.conf

;asterisk -rx "channel originate local/main@hydromet extension "
[hydromet]
exten => main,1,NoOp(begin hydromet alert call)

; --- database variables required (set external)
;   same => n,Set(DB(hydromet/value)=1234.56)
;   same => n,Set(DB(hydromet/siteid)=LOW)
;   same => n,Set(DB(hydromet/parameter)=FB)
;   same => n,Set(DB(hydromet/phone1)=5272)
;   same => n,Set(DB(hydromet/phone2)=5272)
;   same => n,Set(DB(hydromet/phone3)=5272)
;----------------------------------------------------

   same => n,Gosub(log_status,start,1(unconfirmed))
   same => n,Set(DB(hydromet/phone)=0)

   same => n(callnext),NoOp(call the next phone)
   same => n,Set(phone=${DB(hydromet/phone)})
   same => n,Set(phone=$[${phone} + 1}])
   same => n,Set(DB(hydromet/phone)=${phone})
   same => n,Gosub(log,start,1(calling ${phone}))

   same => n,Originate(${SIP}/${DB(hydromet/phone${phone})},exten,confirm,alarmmsg,1,30)
   same => n,GotoIf($[${ORIGINATE_STATUS} = SUCCESS]?end)

   same => n,Gosub(log_status,start,1(unconfirmed))   
   same => n(end),NoOp(someone answered)

[confirm]
exten => alarmmsg,1,NoOp(begining to play alarm message)
   same => n,Gosub(log_status,start,1(unconfirmed))
   same => n,Background(beep)
   same => n,Read(ackDigit,hydromet/incoming_call,1,,2,5) ; press 1 to accept this call
   same => n,GotoIf($["${ackDigit}" = "1"]?ackalert:unconfirmed)

; --- tell the recipeint about this alarm
   same => n(ackalert),NoOp()
   same => n,Playback(hydromet/boise_hydromet)
   same => n,Playback(hydromet/alarm_condition)
   same => n,Gosub(log,start,1(there is an alarm condition at site ${DB(hydromet/sound_file)}))
   same => n,Playback(hydromet/${DB(hydromet/siteid)}_site)
   same => n,Background(hydromet/hydromet_cbtt); the hydromet code for this site is
   same => n,SayAlpha(${DB(hydromet/siteid)})
   same => n,Playback(hydromet/hydromet_parameter) ; the parameter is
   same => n,Playback(hydromet/${DB(hydromet/parameter)}_parameter) ; Forebay
   same => n,Playback(hydromet/hydromet_pcode) ; the hydromet code for this parameter
   same => n,SayAlpha(${DB(hydromet/parameter)})
   same => n,Background(hydromet/alarm_value) ; the alarm value is
   same => n,SayAlpha(${DB(hydromet/value)})
   same => n,Background(hydromet/ack_responibility)
   same => n,Read(ackDigit,hydromet/press1or5,1,,2,5) ;press 1 to accept responsibility, to repeat press 5
   same => n,GotoIf($["${ackDigit}" = "5"]?ackalert)
   same => n,GotoIf($["${ackDigit}" = "1"]?confirmed)
   same => n,Goto(unconfirmed)

; --- confirmed ---
   same => n(confirmed),NoOp()
   same => n,Gosub(log_status,start,1(confirmed))
   same => n,Set(phone=${DB(hydromet/phone)})
   same => n,Gosub(log,start,1(confirmed by ${DB(hydromet/phone${phone})} ))
   same => n,Playback(auth-thankyou)
   same => n,Playback(vm-goodbye)
   same => n,Hangup()

; --- unconfirmed ---
   same => n(unconfirmed),NoOp()
   same => n,Gosub(log_status,start,1(unconfirmed))
   same => n,Goto(hydromet,main,callnext)

exten => i,1,Goto(confirm,alarmmsg,1)

exten => e,1,NoOp(hey this might work)


[log_status]
exten => start,1,NoOp(log)
  same => n,Set(DB(hydromet/status)=${ARG1})
  same => n,Set(DB(hydromet/status_time)=${STRFTIME(${EPOCH},,%Y-%m-%d %H:%M:%S)} )
  same => n,Return()


[log]
 exten => start,1,NoOp(log_status)
  same => n,Set(DB(hydromet/log)=${ARG1})
  same => n,Set(DB(hydromet/log_time)=${STRFTIME(${EPOCH},,%Y-%m-%d %H:%M.%S)}) 
  same => n,Return()
